{
	"info": {
		"_postman_id": "f7b93ab8-ee14-4d2d-9b8e-8d1f2af02d3a",
		"name": "Breeze API Documentation",
		"description": "# Overview\n\nThis document is a WIP.  \nIt contains specifications for the Breeze REST API.  \nBreeze is currently being updated to meet industry and Tithe.ly standards.  \nSome of the endpoints defined here are what we call **Legacy** endpoints, they may _not_ adhere to what is considered  \na standard endpoint (for example, using a PUT instead of a PATCH, returning a 200 instead of 201, etc.).  \nThese legacy endpoints will slowly be migrated to new standards.  \nNote that these legacy endpoints are returning extraneous information, such as the method you called (which you should already know)  \nor the status code as part of the response body (it's already part of the response itself).\n\n# Filters\n\nWhen you see that an endpoint accepts a filter, that filter is added to the URI query like any other query parameter.  \nThe format for an individual filter query is: `filter[field_name:operator:field_type]=filter_value`.  \nYou can add multiple filters by separating them with '&'.\n\n- **field_name**: This would be the internal field you wish to filter on. These should be specified in the endpoint using a filter.\n    \n- **operator**: How the field will be compared to your provided value. For example `gt` for greater than (>). Other options listed below.\n    \n- **field_type**: This identifies the type of field being filteres. This, too, will be provided by the endpoint information.\n    \n- **filter_value**: The value you are using for your filter.\n    \n\nFor example, to search for all records created after January 1st, 2023 you may use the following filter:\n\n```\nfilter[created_on:gteq:date]=2023-01-01\n\n ```\n\n## Field Types\n\n- array\n    \n- boolean\n    \n- date: When using 'eq' for the operator, the value must be parsable by the MySQL DATE_FORMAT command.  \n    Other operators will do a direct comparison (no conversion).  \n    If the operator provided is missing or invalid it will default to `eq`.\n    \n- number\n    \n- text\n    \n- timestamp: When using 'eq' for the operator, the value must be parsable by the MySQL DATE_FORMAT command.  \n    Other operators will do a direct comparison (no conversion).  \n    If the operator provided is missing or invalid it will default to `eq`.\n    \n\n## Filter Operators\n\n| Operator | Field Types | Returns records ... |\n| --- | --- | --- |\n| contains | array, text | containing the search criteria. |\n| eq | boolean, date, number, text, timestamp | matching the search criteria. |\n| qt | date, number, timestamp | greater than the search criteria. |\n| qteq | date, timestamp | greater than or equal to the search criteria. |\n| lt | date, number, timestamp | less than the search criteria. |\n| lteq | date, timestamp | less than or equal to the search criteria. |\n| noteq | text | not matching the search criteria. |\n| not_eq | boolean | not matching the search criteria. |\n| not_starts_with | text | that do not start with the search criteria. |\n| starts_with | text | starting with the search criteria. |\n\n# Sorting\n\nWhen you see that an endpoint accepts a sort, that sort is added to the URI query like any other query parameter.  \nThe format for sorting a result is: `sort=[field_name:direction],[field_name:direction]`.  \nAs you can see, each sort is enclosed with '\\[\\]' and should include the field name and direction.  \nMultiple sorts can be added by separating them with a comma.\n\n- **field_name**: This would be the internal field you wish to sort on. These should be specified in the endpoint using a sort.\n    \n- **direction**: Set to either `asc` or `desc`.\n    \n\nFor example, to sort records first by user_name, then by a creation date in descending order:\n\n```\nsort=[user_name:asc],[created_on:desc]\n\n ```\n\n# API Versioning\n\nThis API will use a combination of dated and URI versioning.\n\n## API Version Responses\n\nMost API responses will include API version information.  \nSome endpoints cannot return this data (for example, PDF responses or simple array responses).  \n_All_ responses will also include header information.\n\n### API Body Response Block\n\n```\n{\n    \"api\": {\n        \"version\": \"2023-06-09\",\n        \"email\": \"support@breezechms.com\",\n        \"documentation\": \"https:\\/\\/app.swaggerhub.com\\/apis\\/Tithe.ly\\/Breeze\\/2023-06-09\",\n        \"latest\": \"2023-06-10\",\n        \"upgrade\": true,\n        \"detail\": \"Detailed message about the version used.\",\n        \"error\": \"This requested version is unsupported and will not complete. Please use a newer version and try again.\"\n    }\n}\n\n ```\n\n| Key | Description |\n| --- | --- |\n| version | The API version being used. See below for information about specifying the version. |\n| email | Support team email address. |\n| documentation | Where to find (this) documentation. |\n| latest | (Optional) Provided when the used version is not the current version. |\n| upgrade | (Optional) Indicates that you should update your API calls. |\n| details | (Optional) Provides information about the current request. |\n| error | (Optional) Provided when a call is made to an non-supported API version. |\n\n### API Header Response\n\n| Header | Description |\n| --- | --- |\n| api-version | The API version being used. See below for information about specifying the version. |\n| api-latest | (Optional) Provided when the used version is not the current version. |\n| api-upgrade | (Optional) Indicates that you should update your API calls. |\n\n## Specify which API version you want to use.\n\nYou can specify which API version you want to use by adding \"API-VERSION\" to the header in your request.  \nIf you do not specify a version then the code will default to the oldest supported version.  \nYou can use version `latest` in your request to alway use the most current version, however, this would  \nalso subject your code to potential breaking changes.\n\n## API breaking changes\n\nOur team will attempt to avoid breaking changes in the API.  \nThere are times that this cannot be avoided.  \nIn these cases our first attempt will be to start a new API version and deprecate the current version.  \nThis would result in a response to the caller with a deprecation date.\n\n## Suggested use case\n\nIt is highly recommended that you design your code to look for the \"upgrade\" key in the response and alert the engineer  \nas to the pending deprecation.\n\nContact Support:  \nName: Chris Marsh (Architect)  \nEmail: [chris.marsh@yourgiving.co](https://mailto:chris.marsh@yourgiving.co)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "960321"
	},
	"item": [
		{
			"name": "attachments",
			"item": [
				{
					"name": "Get attachments for a model",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/attachments?attached_to=EventInstance&attached_to_id=<integer>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attachments"
							],
							"query": [
								{
									"key": "attached_to",
									"value": "EventInstance",
									"description": "(Required) The model type to get the attachments for."
								},
								{
									"key": "attached_to_id",
									"value": "<integer>",
									"description": "(Required) The model id to get the attachments for."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "https://api.breezechms.com/api/v2/attachments?attached_to=EventInstance&attached_to_id=<integer>",
									"protocol": "https",
									"host": [
										"api",
										"breezechms",
										"com"
									],
									"path": [
										"api",
										"v2",
										"attachments"
									],
									"query": [
										{
											"key": "attached_to",
											"value": "EventInstance",
											"description": "(Required) The model type to get the attachments for."
										},
										{
											"key": "attached_to_id",
											"value": "<integer>",
											"description": "(Required) The model id to get the attachments for."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"filename\": \"<string>\",\n      \"url\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"file_size\": \"<integer>\",\n      \"meta\": {},\n      \"attached_to\": [\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"uploaded_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"filename\": \"<string>\",\n      \"url\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"file_size\": \"<integer>\",\n      \"meta\": {},\n      \"attached_to\": [\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"uploaded_at\": \"<dateTime>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?attached_to=EventInstance&attached_to_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "attached_to",
											"value": "EventInstance",
											"description": "(Required) The model type to get the attachments for."
										},
										{
											"key": "attached_to_id",
											"value": "<integer>",
											"description": "(Required) The model id to get the attachments for."
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?attached_to=EventInstance&attached_to_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "attached_to",
											"value": "EventInstance",
											"description": "(Required) The model type to get the attachments for."
										},
										{
											"key": "attached_to_id",
											"value": "<integer>",
											"description": "(Required) The model id to get the attachments for."
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "An error occurred",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/attachments?attached_to=EventInstance&attached_to_id=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									],
									"query": [
										{
											"key": "attached_to",
											"value": "EventInstance",
											"description": "(Required) The model type to get the attachments for."
										},
										{
											"key": "attached_to_id",
											"value": "<integer>",
											"description": "(Required) The model id to get the attachments for."
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Attach files to an available model",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"file_id\": \"<integer>\",\n  \"attach_to\": \"EventInstance\",\n  \"attach_to_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/attachments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"attachments"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"file_id\": \"<integer>\",\n  \"attach_to\": \"EventInstance\",\n  \"attach_to_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.breezechms.com/api/v2/attachments",
									"protocol": "https",
									"host": [
										"api",
										"breezechms",
										"com"
									],
									"path": [
										"api",
										"v2",
										"attachments"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"url\": \"<string>\",\n    \"mime_type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"file_size\": \"<integer>\",\n    \"meta\": {},\n    \"attached_to\": [\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"uploaded_at\": \"<dateTime>\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"file_id\": \"<integer>\",\n  \"attach_to\": \"EventInstance\",\n  \"attach_to_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Not Found",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"file_id\": \"<integer>\",\n  \"attach_to\": \"EventInstance\",\n  \"attach_to_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/attachments",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"attachments"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "auth",
			"item": [
				{
					"name": "config",
					"item": [
						{
							"name": "get Auth Config",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/config?subdomain=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"config"
									],
									"query": [
										{
											"key": "subdomain",
											"value": "<string>",
											"description": "(Required) The subdomain for the organization being logged into."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "https://api.breezechms.com/api/v2/auth/config?subdomain=<string>",
											"protocol": "https",
											"host": [
												"api",
												"breezechms",
												"com"
											],
											"path": [
												"api",
												"v2",
												"auth",
												"config"
											],
											"query": [
												{
													"key": "subdomain",
													"value": "<string>",
													"description": "(Required) The subdomain for the organization being logged into."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"tithely\": \"<boolean>\",\n    \"name\": \"<string>\",\n    \"can_create_user\": \"<boolean>\"\n  }\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/config?subdomain=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"config"
											],
											"query": [
												{
													"key": "subdomain",
													"value": "<string>",
													"description": "(Required) The subdomain for the organization being logged into."
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Log in to Breeze.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"password\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"username\": \"<string>\",\n  \"version\": 1,\n  \"2fa_code\": \"0RL9SXJ9\",\n  \"use_safe_device\": \"<boolean>\",\n  \"device_token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"login"
									]
								},
								"description": "Standard Username/Password login."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"username\": \"<string>\",\n  \"version\": 1,\n  \"2fa_code\": \"0RL9SXJ9\",\n  \"use_safe_device\": \"<boolean>\",\n  \"device_token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.breezechms.com/api/v2/auth/login",
											"protocol": "https",
											"host": [
												"api",
												"breezechms",
												"com"
											],
											"path": [
												"api",
												"v2",
												"auth",
												"login"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"token_type\": \"<string>\",\n  \"session\": \"<string>\",\n  \"device_token\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"username\": \"<string>\",\n  \"version\": 1,\n  \"2fa_code\": \"0RL9SXJ9\",\n  \"use_safe_device\": \"<boolean>\",\n  \"device_token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"username\": \"<string>\",\n  \"version\": 1,\n  \"2fa_code\": \"0RL9SXJ9\",\n  \"use_safe_device\": \"<boolean>\",\n  \"device_token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "2FA error",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"password\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"username\": \"<string>\",\n  \"version\": 1,\n  \"2fa_code\": \"0RL9SXJ9\",\n  \"use_safe_device\": \"<boolean>\",\n  \"device_token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/login",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"status": "Precondition Required",
									"code": 428,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "logout",
					"item": [
						{
							"name": "Log the user out (Invalidate the token).",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"session_key\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://api.breezechms.com/api/v2/auth/logout",
											"protocol": "https",
											"host": [
												"api",
												"breezechms",
												"com"
											],
											"path": [
												"api",
												"v2",
												"auth",
												"logout"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"logout"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"logout"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"logout"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "me",
					"item": [
						{
							"name": "Get logged on user's information.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"me"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"me"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"user\": {\n      \"id\": \"<integer>\",\n      \"oid\": \"<integer>\",\n      \"username\": \"<string>\",\n      \"first_name\": \"<string>\",\n      \"last_name\": \"<string>\",\n      \"email\": \"<email>\",\n      \"is_primary\": \"<boolean>\",\n      \"created_on\": \"<date>\",\n      \"last_active\": \"<date>\",\n      \"linked_person_id\": \"<integer>\",\n      \"role\": {\n        \"id\": \"<integer>\",\n        \"oid\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"cannot_edit\": \"<boolean>\",\n        \"cannot_delete\": \"<boolean>\",\n        \"created_on\": \"<date>\"\n      },\n      \"referrer\": \"<string>\",\n      \"organization\": {\n        \"name\": \"<string>\",\n        \"subdomain\": \"<string>\",\n        \"country_id\": \"<integer>\",\n        \"language\": \"english\",\n        \"status\": \"<integer>\",\n        \"customer_id\": \"<string>\",\n        \"created_on\": \"<dateTime>\",\n        \"country\": {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"abbreviation\": \"<string>\",\n          \"abbreviation_2\": \"<string>\",\n          \"currency\": \"<string>\",\n          \"currency_symbol\": \"<string>\",\n          \"date_format\": \"<string>\",\n          \"sms_prefix\": \"<integer>\",\n          \"sms_service\": \"<string>\"\n        }\n      }\n    },\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"organization\": {\n      \"name\": \"<string>\",\n      \"subdomain\": \"<string>\",\n      \"country_id\": \"<integer>\",\n      \"language\": \"english\",\n      \"status\": \"<integer>\",\n      \"customer_id\": \"<string>\",\n      \"created_on\": \"<dateTime>\",\n      \"recentGiving\": \"<boolean>\",\n      \"country\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"abbreviation\": \"<string>\",\n        \"abbreviation_2\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"date_format\": \"<string>\",\n        \"sms_prefix\": \"<integer>\",\n        \"sms_service\": \"<string>\"\n      },\n      \"preferences\": [\n        {\n          \"id\": \"<integer>\",\n          \"oid\": \"<integer>\",\n          \"user_id\": \"<integer>\",\n          \"preference_type\": \"<string>\",\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"created_on\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"oid\": \"<integer>\",\n          \"user_id\": \"<integer>\",\n          \"preference_type\": \"<string>\",\n          \"name\": \"<string>\",\n          \"value\": \"<string>\",\n          \"created_on\": \"<dateTime>\"\n        }\n      ]\n    },\n    \"pusher\": {\n      \"key\": \"<string>\",\n      \"cluster\": \"<string>\"\n    },\n    \"feature_toggles\": [\n      \"<string>\",\n      \"<string>\"\n    ]\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"me"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/me",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"me"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "refresh",
					"item": [
						{
							"name": "Refreshes the user's token.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/auth/refresh",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"refresh"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"refresh"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"token_type\": \"<string>\",\n  \"session\": \"<string>\",\n  \"device_token\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"refresh"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"refresh"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/auth/refresh",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"refresh"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "sessionkey",
					"item": [
						{
							"name": "Get user's access token using session key.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"session_key\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/sessionkey",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"sessionkey"
									]
								},
								"description": "Convert a session key into a JWT token.\nCalled by UI when access token is missing but session key is not."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/sessionkey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessionkey"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"token_type\": \"<string>\",\n  \"session\": \"<string>\",\n  \"device_token\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/sessionkey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessionkey"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"session_key\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/sessionkey",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"sessionkey"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "tithely",
					"item": [
						{
							"name": "Resolve tithe.ly token",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"token\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/auth/tithely",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"auth",
										"tithely"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/tithely",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"tithely"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"access_token\": \"<string>\",\n  \"expires_in\": \"<integer>\",\n  \"token_type\": \"<string>\",\n  \"session\": \"<string>\",\n  \"device_token\": \"<string>\"\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/tithely",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"tithely"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"token\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/auth/tithely",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"auth",
												"tithely"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "emails",
			"item": [
				{
					"name": "send",
					"item": [
						{
							"name": "Send an email",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"email\",\n  \"sent_as\": \"bcc\",\n  \"unlayer\": \"<string>\",\n  \"unlayer_template\": \"<integer>\",\n  \"recipients\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"content\": \"<string>\",\n  \"send\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/emails/send",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"emails",
										"send"
									]
								},
								"description": "Handle the incoming request."
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"email\",\n  \"sent_as\": \"bcc\",\n  \"unlayer\": \"<string>\",\n  \"unlayer_template\": \"<integer>\",\n  \"recipients\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"content\": \"<string>\",\n  \"send\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emails/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emails",
												"send"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"email\",\n  \"sent_as\": \"bcc\",\n  \"unlayer\": \"<string>\",\n  \"unlayer_template\": \"<integer>\",\n  \"recipients\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"content\": \"<string>\",\n  \"send\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emails/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emails",
												"send"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"email\",\n  \"sent_as\": \"bcc\",\n  \"unlayer\": \"<string>\",\n  \"unlayer_template\": \"<integer>\",\n  \"recipients\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"content\": \"<string>\",\n  \"send\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emails/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emails",
												"send"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"attachments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"subject\": \"<string>\",\n  \"status\": \"<string>\",\n  \"type\": \"email\",\n  \"sent_as\": \"bcc\",\n  \"unlayer\": \"<string>\",\n  \"unlayer_template\": \"<integer>\",\n  \"recipients\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"content\": \"<string>\",\n  \"send\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/emails/send",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"emails",
												"send"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "event-instances",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "people",
							"item": [
								{
									"name": "Get checked-in people on event instance.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id/people",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id",
												"people"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/event-instances/:id/people",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"event-instances",
														":id",
														"people"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<long>\",\n      \"instance_id\": \"<long>\",\n      \"person_id\": \"<long>\",\n      \"check_out\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<long>\",\n      \"instance_id\": \"<long>\",\n      \"person_id\": \"<long>\",\n      \"check_out\": \"<dateTime>\"\n    }\n  ]\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/event-instances/:id/people",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"event-instances",
														":id",
														"people"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/event-instances/:id/people",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"event-instances",
														":id",
														"people"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/event-instances/:id/people",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"event-instances",
														":id",
														"people"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get event instance.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-instances/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-instances",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"event_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"settings_id\": \"<integer>\",\n    \"start\": \"<dateTime>\",\n    \"end\": \"<dateTime>\",\n    \"allDay\": \"<boolean>\",\n    \"calendar\": \"<string>\",\n    \"locations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"counts\": {\n      \"attenders\": \"<integer>\",\n      \"volunteers\": \"<integer>\"\n    },\n    \"previous_instance_id\": \"<integer>\",\n    \"next_instance_id\": \"<integer>\",\n    \"service_plan_id\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete event instance.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-instances/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-instances",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update event instance.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"calendar_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/event-instances/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-instances",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"calendar_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"event_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"settings_id\": \"<integer>\",\n    \"start\": \"<dateTime>\",\n    \"end\": \"<dateTime>\",\n    \"allDay\": \"<boolean>\",\n    \"calendar\": \"<string>\",\n    \"locations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"counts\": {\n      \"attenders\": \"<integer>\",\n      \"volunteers\": \"<integer>\"\n    },\n    \"previous_instance_id\": \"<integer>\",\n    \"next_instance_id\": \"<integer>\",\n    \"service_plan_id\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"calendar_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"calendar_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"calendar_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"calendar_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/event-instances/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"event-instances",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "List event instances.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/event-instances?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"event-instances"
							],
							"query": [
								{
									"key": "page",
									"value": "<long>",
									"description": "The page to retrieve starting with page 1."
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The number of resources to return. Default: 25"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|category_id|array|Comma-separated list of calendar IDs.|\n|start_date|date||\n|end_date|date||\n|name|text|Search by event name.|\n\nSee **Filters** above for more details about using filters."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Sortable fields\n* name\n* start_datetime\n* end_datetime\n* locations\n\n\nSee **Sorting** above for more details about sorting."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-instances?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "<long>",
											"description": "The page to retrieve starting with page 1."
										},
										{
											"key": "pageSize",
											"value": "<long>",
											"description": "The number of resources to return. Default: 25"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|category_id|array|Comma-separated list of calendar IDs.|\n|start_date|date||\n|end_date|date||\n|name|text|Search by event name.|\n\nSee **Filters** above for more details about using filters."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sortable fields\n* name\n* start_datetime\n* end_datetime\n* locations\n\n\nSee **Sorting** above for more details about sorting."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"event_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"settings_id\": \"<integer>\",\n      \"start\": \"<dateTime>\",\n      \"end\": \"<dateTime>\",\n      \"allDay\": \"<boolean>\",\n      \"calendar\": \"<string>\",\n      \"locations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"counts\": {\n        \"attenders\": \"<integer>\",\n        \"volunteers\": \"<integer>\"\n      },\n      \"service_plan_id\": \"<integer>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"event_id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"settings_id\": \"<integer>\",\n      \"start\": \"<dateTime>\",\n      \"end\": \"<dateTime>\",\n      \"allDay\": \"<boolean>\",\n      \"calendar\": \"<string>\",\n      \"locations\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"counts\": {\n        \"attenders\": \"<integer>\",\n        \"volunteers\": \"<integer>\"\n      },\n      \"service_plan_id\": \"<integer>\"\n    }\n  ],\n  \"links\": {\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\"\n  },\n  \"meta\": {\n    \"current_page\": \"<integer>\",\n    \"from\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"links\": [\n      {\n        \"url\": \"<string>\",\n        \"label\": \"<string>\",\n        \"active\": \"<boolean>\"\n      },\n      {\n        \"url\": \"<string>\",\n        \"label\": \"<string>\",\n        \"active\": \"<boolean>\"\n      }\n    ],\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-instances?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "<long>",
											"description": "The page to retrieve starting with page 1."
										},
										{
											"key": "pageSize",
											"value": "<long>",
											"description": "The number of resources to return. Default: 25"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|category_id|array|Comma-separated list of calendar IDs.|\n|start_date|date||\n|end_date|date||\n|name|text|Search by event name.|\n\nSee **Filters** above for more details about using filters."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sortable fields\n* name\n* start_datetime\n* end_datetime\n* locations\n\n\nSee **Sorting** above for more details about sorting."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/event-instances?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"event-instances"
									],
									"query": [
										{
											"key": "page",
											"value": "<long>",
											"description": "The page to retrieve starting with page 1."
										},
										{
											"key": "pageSize",
											"value": "<long>",
											"description": "The number of resources to return. Default: 25"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|category_id|array|Comma-separated list of calendar IDs.|\n|start_date|date||\n|end_date|date||\n|name|text|Search by event name.|\n\nSee **Filters** above for more details about using filters."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sortable fields\n* name\n* start_datetime\n* end_datetime\n* locations\n\n\nSee **Sorting** above for more details about sorting."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "events",
			"item": [
				{
					"name": "calendars",
					"item": [
						{
							"name": "{calendarIds}",
							"item": [
								{
									"name": "embed",
									"item": [
										{
											"name": "Get the embed hash for a calendar.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:calendarIds/embed",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":calendarIds",
														"embed"
													],
													"variable": [
														{
															"key": "calendarIds",
															"value": "<string>",
															"description": "(Required) "
														}
													]
												},
												"description": "Encode a list of calendars into a decodable string.\n\nRequired Param: 'calendars' either:\n1) a json encoded array of calendar ids to embed, ie '[1,2,4]'\n2) the string 'all'"
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/calendars/:calendarIds/embed",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																"calendars",
																":calendarIds",
																"embed"
															],
															"variable": [
																{
																	"key": "calendarIds"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": \"<string>\"\n}"
												},
												{
													"name": "User is unauthorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/calendars/:calendarIds/embed",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																"calendars",
																":calendarIds",
																"embed"
															],
															"variable": [
																{
																	"key": "calendarIds"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/calendars/:calendarIds/embed",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																"calendars",
																":calendarIds",
																"embed"
															],
															"variable": [
																{
																	"key": "calendarIds"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Soft delete a calendar.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/calendars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										},
										"description": "When you delete a calendar, it deletes the EventInstance, so\nall the volunteers and other records are orphaned - which leaves them available\nfor specific reports but does not show them as conflicting when being scheduled\nfor new events."
									},
									"response": [
										{
											"name": "Accepted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"color\": \"<string>\",\n    \"address\": \"<string>\",\n    \"hash\": \"<string>\"\n  }\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update a calendar.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/events/calendars/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"color\": \"<string>\",\n    \"address\": \"<string>\",\n    \"hash\": \"<string>\"\n  }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/events/calendars/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"calendars",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get all calendars.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events/calendars?filter=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"calendars"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|name|text||\n\nSee **Filters** above for more details about using filters."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/calendars?filter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|name|text||\n\nSee **Filters** above for more details about using filters."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"color\": \"<string>\",\n      \"address\": \"<string>\",\n      \"hash\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"color\": \"<string>\",\n      \"address\": \"<string>\",\n      \"hash\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/calendars?filter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|name|text||\n\nSee **Filters** above for more details about using filters."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/calendars?filter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|name|text||\n\nSee **Filters** above for more details about using filters."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Create a new calendar.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events/calendars",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										"calendars"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/events/calendars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"color\": \"<string>\",\n    \"address\": \"<string>\",\n    \"hash\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/events/calendars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/events/calendars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"color\": \"<string>\",\n  \"name\": \"<string>\",\n  \"address\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/events/calendars",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"calendars"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "external",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Get the external events for a calendar.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/external/:id?filter=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												"external",
												":id"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|start_datetime|date|Only supports `gt` and `lt`.|\n\nSee **Filters** above for more details about using filters."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/external/:id?filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"external",
														":id"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|start_datetime|date|Only supports `gt` and `lt`.|\n\nSee **Filters** above for more details about using filters."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"calendar_id\": \"<long>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/external/:id?filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"external",
														":id"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|start_datetime|date|Only supports `gt` and `lt`.|\n\nSee **Filters** above for more details about using filters."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/external/:id?filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"external",
														":id"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|start_datetime|date|Only supports `gt` and `lt`.|\n\nSee **Filters** above for more details about using filters."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/external/:id?filter=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														"external",
														":id"
													],
													"query": [
														{
															"key": "filter",
															"value": "<string>",
															"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|start_datetime|date|Only supports `gt` and `lt`.|\n\nSee **Filters** above for more details about using filters."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{eventId}",
					"item": [
						{
							"name": "tags",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Get a tag for an event.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/:eventId/tags/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														":eventId",
														"tags",
														":id"
													],
													"variable": [
														{
															"key": "eventId",
															"value": "<long>",
															"description": "(Required) Event ID"
														},
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) ID of the retrieved resource."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:eventId/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":eventId",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": [\n    {\n      \"event_id\": \"<integer>\",\n      \"tag_id\": \"<integer>\",\n      \"tag_name\": \"<string>\"\n    },\n    {\n      \"event_id\": \"<integer>\",\n      \"tag_id\": \"<integer>\",\n      \"tag_name\": \"<string>\"\n    }\n  ]\n}"
												},
												{
													"name": "User is unauthorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:eventId/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":eventId",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:eventId/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":eventId",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/events/:eventId/tags/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"events",
																":eventId",
																"tags",
																":id"
															],
															"variable": [
																{
																	"key": "eventId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "tags",
							"item": [
								{
									"name": "Get all tags for an event.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id/tags",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id",
												"tags"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/:id/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														":id",
														"tags"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"event_id\": \"<integer>\",\n      \"tag_id\": \"<integer>\",\n      \"tag_name\": \"<string>\"\n    },\n    {\n      \"event_id\": \"<integer>\",\n      \"tag_id\": \"<integer>\",\n      \"tag_name\": \"<string>\"\n    }\n  ]\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/:id/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														":id",
														"tags"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/:id/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														":id",
														"tags"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/events/:id/tags",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"events",
														":id",
														"tags"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get event.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"calendar\": {},\n    \"date\": {}\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete event.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/events/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"calendar\": {},\n    \"date\": {}\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/events/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"events",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Create a new event.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"category_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\",\n  \"check_in\": \"everyone\",\n  \"check_in_array\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"event_fields\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    }\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"events"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"category_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\",\n  \"check_in\": \"everyone\",\n  \"check_in_array\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"event_fields\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"event_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"settings_id\": \"<integer>\",\n    \"start\": \"<dateTime>\",\n    \"end\": \"<dateTime>\",\n    \"allDay\": \"<boolean>\",\n    \"calendar\": \"<string>\",\n    \"locations\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"counts\": {\n      \"attenders\": \"<integer>\",\n      \"volunteers\": \"<integer>\"\n    },\n    \"previous_instance_id\": \"<integer>\",\n    \"next_instance_id\": \"<integer>\",\n    \"service_plan_id\": \"<integer>\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"category_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\",\n  \"check_in\": \"everyone\",\n  \"check_in_array\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"event_fields\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"category_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\",\n  \"check_in\": \"everyone\",\n  \"check_in_array\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"event_fields\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"category_id\": \"<integer>\",\n  \"start_datetime\": \"<dateTime>\",\n  \"end_datetime\": \"<dateTime>\",\n  \"check_in\": \"everyone\",\n  \"check_in_array\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"event_fields\": [\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    },\n    {\n      \"name\": \"<string>\",\n      \"value\": {\n        \"description\": \"The value of the field\"\n      }\n    }\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/events",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"events"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "file",
			"item": [
				{
					"name": "upload",
					"item": [
						{
							"name": "Upload a file attachment.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"file\": \"<string>\",\n  \"file_name\": \"<string>\",\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/file/upload",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"file",
										"upload"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"file\": \"<string>\",\n  \"file_name\": \"<string>\",\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/file/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"file",
												"upload"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"url\": \"<string>\",\n    \"mime_type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"file_size\": \"<integer>\",\n    \"meta\": {},\n    \"attached_to\": [\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"uploaded_at\": \"<dateTime>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"file\": \"<string>\",\n  \"file_name\": \"<string>\",\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/file/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"file",
												"upload"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"file\": \"<string>\",\n  \"file_name\": \"<string>\",\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/file/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"file",
												"upload"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"file\": \"<string>\",\n  \"file_name\": \"<string>\",\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/file/upload",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"file",
												"upload"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get file attachments.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/file",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"file"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"filename\": \"<string>\",\n      \"url\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"file_size\": \"<integer>\",\n      \"meta\": {},\n      \"attached_to\": [\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"uploaded_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"filename\": \"<string>\",\n      \"url\": \"<string>\",\n      \"mime_type\": \"<string>\",\n      \"title\": \"<string>\",\n      \"file_size\": \"<integer>\",\n      \"meta\": {},\n      \"attached_to\": [\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\"\n        }\n      ],\n      \"uploaded_at\": \"<dateTime>\"\n    }\n  ]\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/file",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"file"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/file",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"file"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Delete file attachments.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/file?file_ids=<long>&file_ids=<long>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"file"
							],
							"query": [
								{
									"key": "file_ids",
									"value": "<long>",
									"description": "(Required) The files to delete"
								},
								{
									"key": "file_ids",
									"value": "<long>",
									"description": "(Required) The files to delete"
								}
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/file?file_ids=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"file"
									],
									"query": [
										{
											"key": "file_ids",
											"value": "<long>",
											"description": "(Required) The files to delete"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/file?file_ids=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"file"
									],
									"query": [
										{
											"key": "file_ids",
											"value": "<long>",
											"description": "(Required) The files to delete"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/file?file_ids=<long>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"file"
									],
									"query": [
										{
											"key": "file_ids",
											"value": "<long>",
											"description": "(Required) The files to delete"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "forgot-password",
			"item": [
				{
					"name": "Process form submission for forgot password.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<string>\",\n  \"subdomain\": \"<email>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/forgot-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"forgot-password"
							]
						},
						"description": "User submission of forgot password form creates an entry and sends out an email."
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"subdomain\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"forgot-password"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"subdomain\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"forgot-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"subdomain\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"forgot-password"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"subdomain\": \"<email>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/forgot-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"forgot-password"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "integrations",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "{action}",
							"item": [
								{
									"name": "Run an action on the specified integration.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/integrations/:id/:action",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"integrations",
												":id",
												":action"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												},
												{
													"key": "action",
													"value": "<string>",
													"description": "(Required) The action to run. Always can be enable or disable."
												}
											]
										}
									},
									"response": [
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/integrations/:id/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrations",
														":id",
														":action"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/integrations/:id/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrations",
														":id",
														":action"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/integrations/:id/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrations",
														":id",
														":action"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/integrations/:id/:action",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"integrations",
														":id",
														":action"
													],
													"variable": [
														{
															"key": "id"
														},
														{
															"key": "action"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Display the specified resource.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integrations/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integrations",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"integrations",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"builder_io_id\": \"<string>\",\n    \"description\": \"<string>\",\n    \"display_name\": \"<string>\",\n    \"enabled\": \"<boolean>\",\n    \"id\": \"<long>\",\n    \"name\": \"<string>\",\n    \"tithely\": \"<boolean>\",\n    \"monthlyFee\": \"<number>\",\n    \"setupFee\": \"<number>\",\n    \"setupFeeWaived\": \"<boolean>\",\n    \"currencyCode\": \"<string>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"integrations",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"integrations",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/integrations/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"integrations",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get available integrations.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/integrations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"integrations"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integrations"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"builder_io_id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"tithely\": \"<boolean>\"\n    },\n    {\n      \"builder_io_id\": \"<string>\",\n      \"description\": \"<string>\",\n      \"display_name\": \"<string>\",\n      \"enabled\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"name\": \"<string>\",\n      \"tithely\": \"<boolean>\"\n    }\n  ]\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integrations"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/integrations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"integrations"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "me",
			"item": [
				{
					"name": "Get logged on user's information (simplified).",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"created_on\": \"<date>\",\n    \"email\": \"<email>\",\n    \"features\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"first_name\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_primary\": \"<boolean>\",\n    \"last_active\": \"<date>\",\n    \"last_name\": \"<string>\",\n    \"linked_person_id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"organization\": {\n      \"country\": {\n        \"abbreviation\": \"<string>\",\n        \"abbreviation_2\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"date_format\": \"<string>\",\n        \"name\": \"<string>\",\n        \"sms_prefix\": \"<number>\"\n      },\n      \"created_on\": \"<date>\",\n      \"id\": \"<long>\",\n      \"language\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recentGiving\": \"<boolean>\",\n      \"status\": \"<integer>\",\n      \"subdomain\": \"<string>\",\n      \"tithely_billing\": \"<boolean>\",\n      \"tithely_location_id\": \"<string>\",\n      \"tithely_organization_id\": \"<string>\"\n    },\n    \"preferences\": {\n      \"adipisicing_c\": \"<string>\",\n      \"eiusmodc\": \"<string>\",\n      \"tempor_1\": \"<string>\"\n    },\n    \"referrer\": \"<string>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"username\": \"<string>\",\n    \"extensions\": true\n  }\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Updates the currently logged in user.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<email>\",\n  \"current_password\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me"
							]
						},
						"description": "Allows a user to update just their username or email address."
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<email>\",\n  \"current_password\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"created_on\": \"<date>\",\n    \"email\": \"<email>\",\n    \"features\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"first_name\": \"<string>\",\n    \"id\": \"<integer>\",\n    \"is_primary\": \"<boolean>\",\n    \"last_active\": \"<date>\",\n    \"last_name\": \"<string>\",\n    \"linked_person_id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"organization\": {\n      \"country\": {\n        \"abbreviation\": \"<string>\",\n        \"abbreviation_2\": \"<string>\",\n        \"currency\": \"<string>\",\n        \"currency_symbol\": \"<string>\",\n        \"date_format\": \"<string>\",\n        \"name\": \"<string>\",\n        \"sms_prefix\": \"<number>\"\n      },\n      \"created_on\": \"<date>\",\n      \"id\": \"<long>\",\n      \"language\": \"<string>\",\n      \"name\": \"<string>\",\n      \"recentGiving\": \"<boolean>\",\n      \"status\": \"<integer>\",\n      \"subdomain\": \"<string>\",\n      \"tithely_billing\": \"<boolean>\",\n      \"tithely_location_id\": \"<string>\",\n      \"tithely_organization_id\": \"<string>\"\n    },\n    \"preferences\": {\n      \"adipisicing_c\": \"<string>\",\n      \"eiusmodc\": \"<string>\",\n      \"tempor_1\": \"<string>\"\n    },\n    \"referrer\": \"<string>\",\n    \"roles\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"username\": \"<string>\",\n    \"extensions\": true\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<email>\",\n  \"current_password\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<email>\",\n  \"current_password\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"username\": \"<string>\",\n  \"email\": \"<email>\",\n  \"current_password\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/me",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"me"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "message-templates",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Display specific message template.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/message-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"content\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"type\": \"sms\",\n    \"subject\": \"<string>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Remove a message template.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/message-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a message template.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"type\": \"text\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"type\": \"text\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"type\": \"text\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"type\": \"text\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"content\": \"<string>\",\n  \"type\": \"text\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/message-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"message-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Display a list of message templates.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/message-templates?type=text",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"message-templates"
							],
							"query": [
								{
									"key": "type",
									"value": "text",
									"description": "Type of message template filter."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/message-templates?type=text",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates"
									],
									"query": [
										{
											"key": "type",
											"value": "text",
											"description": "Type of message template filter."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"content\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": \"unlayer\",\n      \"thumbnail\": \"<string>\",\n      \"scope\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"subject\": \"<string>\",\n      \"content\": \"<string>\",\n      \"tags\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"type\": \"sms\",\n      \"thumbnail\": \"<string>\",\n      \"scope\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/message-templates?type=text",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates"
									],
									"query": [
										{
											"key": "type",
											"value": "text",
											"description": "Type of message template filter."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/message-templates?type=text",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates"
									],
									"query": [
										{
											"key": "type",
											"value": "text",
											"description": "Type of message template filter."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a new message template",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"content\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"sms\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/message-templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"message-templates"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"sms\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"content\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"type\": \"sms\",\n    \"subject\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"sms\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"sms\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"name\": \"<string>\",\n  \"type\": \"sms\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/message-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"message-templates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "messages",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a message with full details and transformed content based on type.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"message_template_id\": \"<integer>\",\n    \"from_address\": \"<string>\",\n    \"from_person_id\": \"<integer>\",\n    \"private\": \"<integer>\",\n    \"type\": \"html\",\n    \"subject\": \"<string>\",\n    \"content\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": \"draft\",\n    \"incoming\": \"<boolean>\",\n    \"send_at\": \"<dateTime>\",\n    \"delayed_job_id\": \"<string>\",\n    \"files\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"submitted_at\": \"<dateTime>\",\n    \"processed_at\": \"<dateTime>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<string>\",\n    \"people\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"from_person\": \"<string>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a draft message.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Cannot modify a message that is not in draft status.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update an existing message.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_address\": \"<string>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"status\": \"ready\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"sms\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/messages/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_address\": \"<string>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"status\": \"ready\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"sms\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"message_template_id\": \"<integer>\",\n    \"from_address\": \"<string>\",\n    \"from_person_id\": \"<integer>\",\n    \"private\": \"<integer>\",\n    \"type\": \"html\",\n    \"subject\": \"<string>\",\n    \"content\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": \"draft\",\n    \"incoming\": \"<boolean>\",\n    \"send_at\": \"<dateTime>\",\n    \"delayed_job_id\": \"<string>\",\n    \"files\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"submitted_at\": \"<dateTime>\",\n    \"processed_at\": \"<dateTime>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<string>\",\n    \"people\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"from_person\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_address\": \"<string>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"status\": \"ready\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"sms\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_address\": \"<string>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"status\": \"ready\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"sms\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_address\": \"<string>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"status\": \"ready\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"sms\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_address\": \"<string>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"status\": \"ready\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"sms\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Cannot modify a message that is not in draft or ready status.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_address\": \"<string>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"status\": \"ready\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"type\": \"sms\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/messages/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"messages",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve a list of messages with simplified details.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"failed\",\n      \"subject\": \"<string>\",\n      \"send_at\": \"<dateTime>\",\n      \"submitted_at\": \"<dateTime>\",\n      \"processed_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"status\": \"ready\",\n      \"subject\": \"<string>\",\n      \"send_at\": \"<dateTime>\",\n      \"submitted_at\": \"<dateTime>\",\n      \"processed_at\": \"<dateTime>\",\n      \"created_at\": \"<dateTime>\",\n      \"updated_at\": \"<dateTime>\"\n    }\n  ]\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a new message",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"from_address\": \"<string>\",\n  \"status\": \"failed\",\n  \"type\": \"unlayer\",\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/messages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"messages"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"from_address\": \"<string>\",\n  \"status\": \"failed\",\n  \"type\": \"unlayer\",\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"message_template_id\": \"<integer>\",\n    \"from_address\": \"<string>\",\n    \"from_person_id\": \"<integer>\",\n    \"private\": \"<integer>\",\n    \"type\": \"html\",\n    \"subject\": \"<string>\",\n    \"content\": \"<string>\",\n    \"tags\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"status\": \"draft\",\n    \"incoming\": \"<boolean>\",\n    \"send_at\": \"<dateTime>\",\n    \"delayed_job_id\": \"<string>\",\n    \"files\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"submitted_at\": \"<dateTime>\",\n    \"processed_at\": \"<dateTime>\",\n    \"created_at\": \"<dateTime>\",\n    \"updated_at\": \"<string>\",\n    \"people\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"from_person\": \"<string>\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"from_address\": \"<string>\",\n  \"status\": \"failed\",\n  \"type\": \"unlayer\",\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"from_address\": \"<string>\",\n  \"status\": \"failed\",\n  \"type\": \"unlayer\",\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"from_address\": \"<string>\",\n  \"status\": \"failed\",\n  \"type\": \"unlayer\",\n  \"content\": \"<string>\",\n  \"message_template_id\": \"<integer>\",\n  \"from_person_id\": \"<string>\",\n  \"private\": \"<boolean>\",\n  \"send_at\": \"<dateTime>\",\n  \"subject\": \"<string>\",\n  \"tags\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/messages",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"messages"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "notifications",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Disable Notification",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/notifications/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"notifications",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Get Notification Settings",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"checked\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"has_permission\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"permission_description\": \"<string>\",\n      \"run_day\": 0,\n      \"run_weekday\": 0,\n      \"anniversary_field_id\": \"<integer>\",\n      \"anniversary_fields\": \"<string>\"\n    },\n    {\n      \"checked\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"has_permission\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"permission_description\": \"<string>\",\n      \"run_day\": 0,\n      \"run_weekday\": 0,\n      \"anniversary_field_id\": \"<integer>\",\n      \"anniversary_fields\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Enable or Update Notification",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"checked\": \"<boolean>\",\n  \"notification_id\": \"<long>\",\n  \"run_day\": 0,\n  \"run_weekday\": 0,\n  \"anniversary_field_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/notifications",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"notifications"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"checked\": \"<boolean>\",\n  \"notification_id\": \"<long>\",\n  \"run_day\": 0,\n  \"run_weekday\": 0,\n  \"anniversary_field_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"checked\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"has_permission\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"permission_description\": \"<string>\",\n      \"run_day\": 0,\n      \"run_weekday\": 0,\n      \"anniversary_field_id\": \"<integer>\",\n      \"anniversary_fields\": \"<string>\"\n    },\n    {\n      \"checked\": \"<boolean>\",\n      \"description\": \"<string>\",\n      \"has_permission\": \"<boolean>\",\n      \"id\": \"<long>\",\n      \"permission_description\": \"<string>\",\n      \"run_day\": 0,\n      \"run_weekday\": 0,\n      \"anniversary_field_id\": \"<integer>\",\n      \"anniversary_fields\": \"<string>\"\n    }\n  ]\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"checked\": \"<boolean>\",\n  \"notification_id\": \"<long>\",\n  \"run_day\": 0,\n  \"run_weekday\": 0,\n  \"anniversary_field_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"checked\": \"<boolean>\",\n  \"notification_id\": \"<long>\",\n  \"run_day\": 0,\n  \"run_weekday\": 0,\n  \"anniversary_field_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"checked\": \"<boolean>\",\n  \"notification_id\": \"<long>\",\n  \"run_day\": 0,\n  \"run_weekday\": 0,\n  \"anniversary_field_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/notifications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"notifications"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "organizations",
			"item": [
				{
					"name": "info",
					"item": [
						{
							"name": "{subdomain}",
							"item": [
								{
									"name": "Get very basic organization information.",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/organizations/info/:subdomain",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"organizations",
												"info",
												":subdomain"
											],
											"variable": [
												{
													"key": "subdomain",
													"value": "<string>",
													"description": "(Required) Subdomain used by an organization"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/info/:subdomain",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														"info",
														":subdomain"
													],
													"variable": [
														{
															"key": "subdomain"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"name\": \"<string>\",\n    \"create_by_login_page\": \"<boolean>\"\n  }\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/organizations/info/:subdomain",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"organizations",
														"info",
														":subdomain"
													],
													"variable": [
														{
															"key": "subdomain"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Create a new organization.",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"is_demo\": \"<boolean>\",\n  \"organization_name\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"token\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"card_name\": \"<string>\",\n  \"address_line1\": \"<string>\",\n  \"address_city\": \"<string>\",\n  \"address_state\": \"<string>\",\n  \"address_zip\": \"<string>\",\n  \"address_country\": \"<string>\",\n  \"price_acknowledgement\": \"true\",\n  \"referrer_code\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/organizations",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"organizations"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"is_demo\": \"<boolean>\",\n  \"organization_name\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"token\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"card_name\": \"<string>\",\n  \"address_line1\": \"<string>\",\n  \"address_city\": \"<string>\",\n  \"address_state\": \"<string>\",\n  \"address_zip\": \"<string>\",\n  \"address_country\": \"<string>\",\n  \"price_acknowledgement\": \"true\",\n  \"referrer_code\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "<string>"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<email>\",\n  \"first_name\": \"<string>\",\n  \"is_demo\": \"<boolean>\",\n  \"organization_name\": \"<string>\",\n  \"subdomain\": \"<string>\",\n  \"token\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"last_name\": \"<string>\",\n  \"card_name\": \"<string>\",\n  \"address_line1\": \"<string>\",\n  \"address_city\": \"<string>\",\n  \"address_state\": \"<string>\",\n  \"address_zip\": \"<string>\",\n  \"address_country\": \"<string>\",\n  \"price_acknowledgement\": \"true\",\n  \"referrer_code\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/organizations",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"organizations"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "people",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Get one person.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/people/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"people",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "47650273",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/people/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"people",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"person_details\": {\n      \"name\": {\n        \"first\": \"<string>\",\n        \"last\": \"<string>\",\n        \"middle\": \"<string>\",\n        \"nick\": \"<string>\",\n        \"maiden\": \"<string>\",\n        \"id\": \"<integer>\"\n      },\n      \"profile_picture\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"address\": {\n        \"street_address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"state\": \"<string>\",\n        \"zip\": \"<string>\",\n        \"longitude\": \"<string>\",\n        \"latitude\": \"<string>\",\n        \"is_private\": \"<integer>\"\n      },\n      \"birthdate\": \"<string>\",\n      \"phone\": {\n        \"home\": {\n          \"number\": \"<string>\",\n          \"private\": \"<integer>\",\n          \"doNotText\": \"<integer>\"\n        },\n        \"work\": {\n          \"number\": \"<string>\",\n          \"private\": \"<integer>\",\n          \"doNotText\": \"<integer>\"\n        },\n        \"mobile\": {\n          \"number\": \"<string>\",\n          \"private\": \"<integer>\",\n          \"doNotText\": \"<integer>\"\n        }\n      },\n      \"email\": {\n        \"address\": \"<string>\",\n        \"private\": \"<integer>\",\n        \"doNotEmail\": \"<integer>\"\n      }\n    }\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/people/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"people",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/people/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"people",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/people/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"people",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "reset-password",
			"item": [
				{
					"name": "Reset password based on form submit.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"key\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\",\n  \"subdomain\": \"<string>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/reset-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"reset-password"
							]
						}
					},
					"response": [
						{
							"name": "No Content",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\",\n  \"subdomain\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reset-password"
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\",\n  \"subdomain\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reset-password"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\",\n  \"subdomain\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reset-password"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"key\": \"<string>\",\n  \"password\": \"<string>\",\n  \"password_confirmation\": \"<string>\",\n  \"subdomain\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/reset-password",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"reset-password"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "service-plan-templates",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve a service plan template",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-plan-templates/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plan-templates",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plan-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plan-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"event_instance_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"start_datetime\": \"<dateTime>\",\n    \"duration\": \"<integer>\",\n    \"segments\": [\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plan-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plan-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plan-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plan-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plan-templates/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plan-templates",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve service plan templates.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/service-plan-templates",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service-plan-templates"
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-plan-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plan-templates"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"type\": \"public\",\n      \"segments\": [\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"title\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"title\": \"<string>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"created_at\": \"<dateTime>\",\n      \"type\": \"organization\",\n      \"segments\": [\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"title\": \"<string>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"type\": \"<string>\",\n          \"title\": \"<string>\"\n        }\n      ]\n    }\n  ]\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-plan-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plan-templates"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-plan-templates",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plan-templates"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "service-plans",
			"item": [
				{
					"name": "{id}",
					"item": [
						{
							"name": "segments",
							"item": [
								{
									"name": "Store a new segment in a service plan.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"sort_order\": \"<integer>\",\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id/segments",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id",
												"segments"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										},
										"description": "The `meta` field in the request will be validated based on the type.\nThe only type being validated is a `song`.\nFor other types the meta field should be null and is optional on a PATCH.\nA `song` must contain a `song_key` key with a `string` of 1-255 characters or `null`. For example\n```\n\"meta\": {\n\\t\"song_key\": \"C#\"\n}\n```"
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"sort_order\": \"<integer>\",\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/segments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"segments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"service_plan_id\": \"<integer>\",\n    \"section_id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"emoji\": \"<string>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"urls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"duration\": \"<integer>\",\n    \"sort_order\": \"<integer>\",\n    \"meta\": {\n      \"song_key\": \"<string>\"\n    },\n    \"attachments\": [\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      }\n    ],\n    \"song_version\": {\n      \"duration\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"instruments\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"key\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"meta\": {},\n      \"song_id\": \"<integer>\",\n      \"urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"version_name\": \"<string>\",\n      \"song_name\": \"<string>\",\n      \"themes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"attachments\": [\n        {\n          \"id\": \"<integer>\",\n          \"filename\": \"<string>\",\n          \"url\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"title\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"meta\": {},\n          \"attached_to\": [\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"uploaded_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"filename\": \"<string>\",\n          \"url\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"title\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"meta\": {},\n          \"attached_to\": [\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"uploaded_at\": \"<dateTime>\"\n        }\n      ],\n      \"service_plan_segment_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    }\n  }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"sort_order\": \"<integer>\",\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/segments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"segments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"sort_order\": \"<integer>\",\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/segments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"segments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"sort_order\": \"<integer>\",\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/segments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"segments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"sort_order\": \"<integer>\",\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/segments",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"segments"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "sort",
							"item": [
								{
									"name": "Sort the segments of a service plan.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"segments_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id/sort",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id",
												"sort"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"segments_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/sort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"sort"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "The segments_ids array must contain all the segments for the service plan.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"segments_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/sort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"sort"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"segments_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/sort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"sort"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"segments_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/sort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"sort"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"segments_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:id/sort",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":id",
														"sort"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve a service plan.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/pdf"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-plans/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plans",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/pdf"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"event_instance_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"start_datetime\": \"<dateTime>\",\n    \"duration\": \"<integer>\",\n    \"segments\": [\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a service plan.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/service-plans/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plans",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a service plan.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-plans/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plans",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"event_instance_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"start_datetime\": \"<dateTime>\",\n    \"duration\": \"<integer>\",\n    \"segments\": [\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/service-plans/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"service-plans",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{planId}",
					"item": [
						{
							"name": "segments",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "Retrieve a specific segment of a service plan.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":planId",
														"segments",
														":id"
													],
													"variable": [
														{
															"key": "planId",
															"value": "<long>",
															"description": "(Required) ID of the plan."
														},
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) ID of the retrieved resource."
														}
													]
												}
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"service_plan_id\": \"<integer>\",\n    \"section_id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"emoji\": \"<string>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"urls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"duration\": \"<integer>\",\n    \"sort_order\": \"<integer>\",\n    \"meta\": {\n      \"song_key\": \"<string>\"\n    },\n    \"attachments\": [\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      }\n    ],\n    \"song_version\": {\n      \"duration\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"instruments\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"key\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"meta\": {},\n      \"song_id\": \"<integer>\",\n      \"urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"version_name\": \"<string>\",\n      \"song_name\": \"<string>\",\n      \"themes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"attachments\": [\n        {\n          \"id\": \"<integer>\",\n          \"filename\": \"<string>\",\n          \"url\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"title\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"meta\": {},\n          \"attached_to\": [\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"uploaded_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"filename\": \"<string>\",\n          \"url\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"title\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"meta\": {},\n          \"attached_to\": [\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"uploaded_at\": \"<dateTime>\"\n        }\n      ],\n      \"service_plan_segment_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    }\n  }\n}"
												},
												{
													"name": "User is unauthorized.",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Delete a segment from a service plan.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":planId",
														"segments",
														":id"
													],
													"variable": [
														{
															"key": "planId",
															"value": "<long>",
															"description": "(Required) ID of the plan."
														},
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) ID of the retrieved resource."
														}
													]
												}
											},
											"response": [
												{
													"name": "No Content",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "User is unauthorized.",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												}
											]
										},
										{
											"name": "Update a segment in a service plan.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"service-plans",
														":planId",
														"segments",
														":id"
													],
													"variable": [
														{
															"key": "planId",
															"value": "<long>",
															"description": "(Required) ID of the plan."
														},
														{
															"key": "id",
															"value": "<long>",
															"description": "(Required) ID of the retrieved resource."
														}
													]
												},
												"description": "See POST for details about the `meta` field."
											},
											"response": [
												{
													"name": "OK",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"service_plan_id\": \"<integer>\",\n    \"section_id\": \"<integer>\",\n    \"type\": \"<string>\",\n    \"emoji\": \"<string>\",\n    \"title\": \"<string>\",\n    \"content\": \"<string>\",\n    \"urls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"duration\": \"<integer>\",\n    \"sort_order\": \"<integer>\",\n    \"meta\": {\n      \"song_key\": \"<string>\"\n    },\n    \"attachments\": [\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      }\n    ],\n    \"song_version\": {\n      \"duration\": \"<integer>\",\n      \"id\": \"<integer>\",\n      \"instruments\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"key\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"meta\": {},\n      \"song_id\": \"<integer>\",\n      \"urls\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"version_name\": \"<string>\",\n      \"song_name\": \"<string>\",\n      \"themes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"attachments\": [\n        {\n          \"id\": \"<integer>\",\n          \"filename\": \"<string>\",\n          \"url\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"title\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"meta\": {},\n          \"attached_to\": [\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"uploaded_at\": \"<dateTime>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"filename\": \"<string>\",\n          \"url\": \"<string>\",\n          \"mime_type\": \"<string>\",\n          \"title\": \"<string>\",\n          \"file_size\": \"<integer>\",\n          \"meta\": {},\n          \"attached_to\": [\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"type\": \"<string>\"\n            }\n          ],\n          \"uploaded_at\": \"<dateTime>\"\n        }\n      ],\n      \"service_plan_segment_ids\": [\n        \"<integer>\",\n        \"<integer>\"\n      ]\n    }\n  }\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "User is unauthorized.",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Not Found",
													"originalRequest": {
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"emoji\": \"<string>\",\n  \"title\": \"<string>\",\n  \"content\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": {\n    \"song_key\": \"<string>\"\n  },\n  \"song_version_id\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/service-plans/:planId/segments/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"service-plans",
																":planId",
																"segments",
																":id"
															],
															"variable": [
																{
																	"key": "planId"
																},
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "{segmentId}",
									"item": [
										{
											"name": "attachments",
											"item": [
												{
													"name": "{id}",
													"item": [
														{
															"name": "Delete an attachment on a segment from a service plan.",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/service-plans/:planId/segments/:segmentId/attachments/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"service-plans",
																		":planId",
																		"segments",
																		":segmentId",
																		"attachments",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "planId",
																			"value": "<long>",
																			"description": "(Required) ID of the plan"
																		},
																		{
																			"key": "segmentId",
																			"value": "<long>",
																			"description": "(Required) ID of the segment"
																		},
																		{
																			"key": "id",
																			"value": "<long>",
																			"description": "(Required) ID of the retrieved resource."
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "No Content",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/service-plans/:planId/segments/:segmentId/attachments/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"service-plans",
																				":planId",
																				"segments",
																				":segmentId",
																				"attachments",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "planId"
																				},
																				{
																					"key": "segmentId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [],
																	"cookie": [],
																	"body": ""
																},
																{
																	"name": "User is unauthorized.",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/service-plans/:planId/segments/:segmentId/attachments/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"service-plans",
																				":planId",
																				"segments",
																				":segmentId",
																				"attachments",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "planId"
																				},
																				{
																					"key": "segmentId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Access Denied",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/service-plans/:planId/segments/:segmentId/attachments/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"service-plans",
																				":planId",
																				"segments",
																				":segmentId",
																				"attachments",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "planId"
																				},
																				{
																					"key": "segmentId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/service-plans/:planId/segments/:segmentId/attachments/:id",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"service-plans",
																				":planId",
																				"segments",
																				":segmentId",
																				"attachments",
																				":id"
																			],
																			"variable": [
																				{
																					"key": "planId"
																				},
																				{
																					"key": "segmentId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Create a new service plan.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"event_instance_id\": \"<integer>\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/service-plans",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"service-plans"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"event_instance_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-plans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plans"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"event_instance_id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"start_datetime\": \"<dateTime>\",\n    \"duration\": \"<integer>\",\n    \"segments\": [\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      },\n      {\n        \"id\": \"<integer>\",\n        \"service_plan_id\": \"<integer>\",\n        \"section_id\": \"<integer>\",\n        \"type\": \"<string>\",\n        \"emoji\": \"<string>\",\n        \"title\": \"<string>\",\n        \"content\": \"<string>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"duration\": \"<integer>\",\n        \"sort_order\": \"<integer>\",\n        \"meta\": {\n          \"song_key\": \"<string>\"\n        },\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"song_version\": {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      }\n    ]\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"event_instance_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-plans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plans"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"event_instance_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-plans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plans"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"event_instance_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/service-plans",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"service-plans"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "song-library",
			"item": [
				{
					"name": "search",
					"item": [
						{
							"name": "Combined search",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/song-library/search?searchTerm=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"song-library",
										"search"
									],
									"query": [
										{
											"key": "searchTerm",
											"value": "<string>",
											"description": "(Required) Search term, can be a song name or CCLI number."
										}
									]
								},
								"description": "Return combined search results from Song Select and local songs."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/search?searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"search"
											],
											"query": [
												{
													"key": "searchTerm",
													"value": "<string>",
													"description": "(Required) Search term, can be a song name or CCLI number."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"source\": \"song_library\",\n      \"ccli\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"authors\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    },\n    {\n      \"source\": \"song_library\",\n      \"ccli\": \"<string>\",\n      \"id\": \"<string>\",\n      \"name\": \"<string>\",\n      \"authors\": [\n        \"<string>\",\n        \"<string>\"\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/search?searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"search"
											],
											"query": [
												{
													"key": "searchTerm",
													"value": "<string>",
													"description": "(Required) Search term, can be a song name or CCLI number."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/search?searchTerm=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"search"
											],
											"query": [
												{
													"key": "searchTerm",
													"value": "<string>",
													"description": "(Required) Search term, can be a song name or CCLI number."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "song-select",
					"item": [
						{
							"name": "{ccliNumber}",
							"item": [
								{
									"name": "Get Song Select song details",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/song-select/:ccliNumber",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"song-select",
												":ccliNumber"
											],
											"variable": [
												{
													"key": "ccliNumber",
													"value": "<long>",
													"description": "(Required) CCLI number of the song"
												}
											]
										},
										"description": "Return song details from Song Select."
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/song-select/:ccliNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"song-select",
														":ccliNumber"
													],
													"variable": [
														{
															"key": "ccliNumber"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"themes\": [\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      }\n    ],\n    \"authors\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ccli\": \"<string>\",\n    \"key\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"meta\": {\n      \"transposeKeyList\": \"<string>\",\n      \"content\": {\n        \"lyrics\": {\n          \"exists\": \"<boolean>\",\n          \"isAuthorized\": \"<boolean>\"\n        },\n        \"chordSheet\": {\n          \"exists\": \"<boolean>\",\n          \"isAuthorized\": \"<boolean>\"\n        },\n        \"leadSheet\": {\n          \"exists\": \"<boolean>\",\n          \"isAuthorized\": \"<boolean>\"\n        },\n        \"vocalSheet\": {\n          \"exists\": \"<boolean>\",\n          \"isAuthorized\": \"<boolean>\"\n        },\n        \"chordPro\": {\n          \"exists\": \"<boolean>\",\n          \"isAuthorized\": \"<boolean>\"\n        }\n      },\n      \"links\": {\n        \"self\": \"<string>\",\n        \"lyrics\": \"<string>\",\n        \"lyricsPreview\": \"<string>\",\n        \"chordPro\": \"<string>\",\n        \"getChordSheetPdf\": \"<string>\"\n      },\n      \"songSelectLinks\": {\n        \"songSelectSong\": \"<string>\",\n        \"songSelectSongLyrics\": \"<string>\",\n        \"songSelectChordSheet\": \"<string>\",\n        \"songSelectLeadSheet\": \"<string>\",\n        \"songSelectVocalSheet\": \"<string>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/song-select/:ccliNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"song-select",
														":ccliNumber"
													],
													"variable": [
														{
															"key": "ccliNumber"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/song-select/:ccliNumber",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"song-select",
														":ccliNumber"
													],
													"variable": [
														{
															"key": "ccliNumber"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "song-versions",
					"item": [
						{
							"name": "Send a collection of just the song versions requested.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/song-library/song-versions?ids=<integer>&ids=<integer>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"song-library",
										"song-versions"
									],
									"query": [
										{
											"key": "ids",
											"value": "<integer>",
											"description": "(Required) Array of song version IDs."
										},
										{
											"key": "ids",
											"value": "<integer>",
											"description": "(Required) Array of song version IDs."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/song-versions?ids=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"song-versions"
											],
											"query": [
												{
													"key": "ids",
													"value": "<integer>",
													"description": "(Required) Array of song version IDs."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"duration\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"instruments\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"key\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"meta\": {},\n    \"song_id\": \"<integer>\",\n    \"urls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"version_name\": \"<string>\",\n    \"song_name\": \"<string>\",\n    \"themes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"attachments\": [\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      }\n    ],\n    \"service_plan_segment_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/song-versions?ids=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"song-versions"
											],
											"query": [
												{
													"key": "ids",
													"value": "<integer>",
													"description": "(Required) Array of song version IDs."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/song-versions?ids=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"song-versions"
											],
											"query": [
												{
													"key": "ids",
													"value": "<integer>",
													"description": "(Required) Array of song version IDs."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "songs",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Display a specific song.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/songs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"themes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"authors\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ccli\": \"<string>\",\n    \"duration\": \"<integer>\",\n    \"last_scheduled\": \"<date>\",\n    \"versions\": [\n      {\n        \"duration\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"instruments\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"key\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"meta\": {},\n        \"song_id\": \"<integer>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"version_name\": \"<string>\",\n        \"song_name\": \"<string>\",\n        \"themes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"service_plan_segment_ids\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      {\n        \"duration\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"instruments\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"key\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"meta\": {},\n        \"song_id\": \"<integer>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"version_name\": \"<string>\",\n        \"song_name\": \"<string>\",\n        \"themes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"service_plan_segment_ids\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      }\n    ]\n  }\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Remove a specific song.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/songs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update a specific song.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/song-library/songs/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"themes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"authors\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ccli\": \"<string>\",\n    \"duration\": \"<integer>\",\n    \"last_scheduled\": \"<date>\",\n    \"versions\": [\n      {\n        \"duration\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"instruments\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"key\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"meta\": {},\n        \"song_id\": \"<integer>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"version_name\": \"<string>\",\n        \"song_name\": \"<string>\",\n        \"themes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"service_plan_segment_ids\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      {\n        \"duration\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"instruments\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"key\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"meta\": {},\n        \"song_id\": \"<integer>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"version_name\": \"<string>\",\n        \"song_name\": \"<string>\",\n        \"themes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"service_plan_segment_ids\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      }\n    ]\n  }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"name\": \"<string>\",\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{songId}",
							"item": [
								{
									"name": "versions",
									"item": [
										{
											"name": "{id}",
											"item": [
												{
													"name": "attachments",
													"item": [
														{
															"name": "{attachmentId}",
															"item": [
																{
																	"name": "detach Song Version Files",
																	"request": {
																		"auth": {
																			"type": "bearer",
																			"bearer": [
																				{
																					"key": "token",
																					"value": "{{bearerToken}}",
																					"type": "string"
																				}
																			]
																		},
																		"method": "DELETE",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/attachments/:attachmentId",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"attachments",
																				":attachmentId"
																			],
																			"variable": [
																				{
																					"key": "songId",
																					"value": "<long>",
																					"description": "(Required) ID of the song."
																				},
																				{
																					"key": "id",
																					"value": "<long>",
																					"description": "(Required) ID of the retrieved resource."
																				},
																				{
																					"key": "attachmentId",
																					"value": "<long>",
																					"description": "(Required) ID of the attachment."
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "No Content",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/attachments/:attachmentId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"song-library",
																						"songs",
																						":songId",
																						"versions",
																						":id",
																						"attachments",
																						":attachmentId"
																					],
																					"variable": [
																						{
																							"key": "songId"
																						},
																						{
																							"key": "id"
																						},
																						{
																							"key": "attachmentId"
																						}
																					]
																				}
																			},
																			"status": "No Content",
																			"code": 204,
																			"_postman_previewlanguage": "text",
																			"header": [],
																			"cookie": [],
																			"body": ""
																		},
																		{
																			"name": "User is unauthorized.",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/attachments/:attachmentId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"song-library",
																						"songs",
																						":songId",
																						"versions",
																						":id",
																						"attachments",
																						":attachmentId"
																					],
																					"variable": [
																						{
																							"key": "songId"
																						},
																						{
																							"key": "id"
																						},
																						{
																							"key": "attachmentId"
																						}
																					]
																				}
																			},
																			"status": "Unauthorized",
																			"code": 401,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Access Denied",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/attachments/:attachmentId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"song-library",
																						"songs",
																						":songId",
																						"versions",
																						":id",
																						"attachments",
																						":attachmentId"
																					],
																					"variable": [
																						{
																							"key": "songId"
																						},
																						{
																							"key": "id"
																						},
																						{
																							"key": "attachmentId"
																						}
																					]
																				}
																			},
																			"status": "Forbidden",
																			"code": 403,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\"\n}"
																		},
																		{
																			"name": "Not Found",
																			"originalRequest": {
																				"method": "DELETE",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					},
																					{
																						"key": "Authorization",
																						"value": "Bearer <token>",
																						"description": "Added as a part of security scheme: bearer"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/attachments/:attachmentId",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"song-library",
																						"songs",
																						":songId",
																						"versions",
																						":id",
																						"attachments",
																						":attachmentId"
																					],
																					"variable": [
																						{
																							"key": "songId"
																						},
																						{
																							"key": "id"
																						},
																						{
																							"key": "attachmentId"
																						}
																					]
																				}
																			},
																			"status": "Not Found",
																			"code": 404,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "{\n  \"message\": \"<string>\"\n}"
																		}
																	]
																}
															]
														}
													]
												},
												{
													"name": "chord-pro",
													"item": [
														{
															"name": "Create ChordPro for a Song Select Song on demand",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-pro?style=Standard&attach=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id",
																		"chord-pro"
																	],
																	"query": [
																		{
																			"key": "style",
																			"value": "Standard",
																			"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																		},
																		{
																			"key": "attach",
																			"value": "<boolean>",
																			"description": "Attach the ChordPro file to the version."
																		}
																	],
																	"variable": [
																		{
																			"key": "songId",
																			"value": "<long>",
																			"description": "(Required) ID of the song."
																		},
																		{
																			"key": "id",
																			"value": "<long>",
																			"description": "(Required) ID of the retrieved resource."
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-pro?style=Standard&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-pro"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the ChordPro file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"url\": \"<string>\",\n    \"mime_type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"file_size\": \"<integer>\",\n    \"meta\": {},\n    \"attached_to\": [\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"uploaded_at\": \"<dateTime>\"\n  }\n}"
																},
																{
																	"name": "User is unauthorized.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-pro?style=Standard&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-pro"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the ChordPro file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Access Denied",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-pro?style=Standard&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-pro"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the ChordPro file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-pro?style=Standard&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-pro"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the ChordPro file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "chord-sheet",
													"item": [
														{
															"name": "Create Chord Sheet for a Song Select Song on demand",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-sheet?style=Standard&columns=2&attach=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id",
																		"chord-sheet"
																	],
																	"query": [
																		{
																			"key": "style",
																			"value": "Standard",
																			"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																		},
																		{
																			"key": "columns",
																			"value": "2",
																			"description": "Number of columns = 1 or 2. Default is 1."
																		},
																		{
																			"key": "attach",
																			"value": "<boolean>",
																			"description": "Attach the chord sheet file to the version."
																		}
																	],
																	"variable": [
																		{
																			"key": "songId",
																			"value": "<long>",
																			"description": "(Required) ID of the song."
																		},
																		{
																			"key": "id",
																			"value": "<long>",
																			"description": "(Required) ID of the retrieved resource."
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-sheet?style=Standard&columns=2&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-sheet"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "columns",
																					"value": "2",
																					"description": "Number of columns = 1 or 2. Default is 1."
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the chord sheet file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"url\": \"<string>\",\n    \"mime_type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"file_size\": \"<integer>\",\n    \"meta\": {},\n    \"attached_to\": [\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"uploaded_at\": \"<dateTime>\"\n  }\n}"
																},
																{
																	"name": "User is unauthorized.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-sheet?style=Standard&columns=2&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-sheet"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "columns",
																					"value": "2",
																					"description": "Number of columns = 1 or 2. Default is 1."
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the chord sheet file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Access Denied",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-sheet?style=Standard&columns=2&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-sheet"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "columns",
																					"value": "2",
																					"description": "Number of columns = 1 or 2. Default is 1."
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the chord sheet file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/chord-sheet?style=Standard&columns=2&attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"chord-sheet"
																			],
																			"query": [
																				{
																					"key": "style",
																					"value": "Standard",
																					"description": "Chart style as \"Standard\", \"Number\" \"DoReMiFixed\", or \"DoReMiMovable\""
																				},
																				{
																					"key": "columns",
																					"value": "2",
																					"description": "Number of columns = 1 or 2. Default is 1."
																				},
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the chord sheet file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "lyrics",
													"item": [
														{
															"name": "Create Lyrics for a Song Select Song on demand",
															"request": {
																"auth": {
																	"type": "bearer",
																	"bearer": [
																		{
																			"key": "token",
																			"value": "{{bearerToken}}",
																			"type": "string"
																		}
																	]
																},
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/lyrics?attach=<boolean>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id",
																		"lyrics"
																	],
																	"query": [
																		{
																			"key": "attach",
																			"value": "<boolean>",
																			"description": "Attach the lyrics file to the version."
																		}
																	],
																	"variable": [
																		{
																			"key": "songId",
																			"value": "<long>",
																			"description": "(Required) ID of the song."
																		},
																		{
																			"key": "id",
																			"value": "<long>",
																			"description": "(Required) ID of the retrieved resource."
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "OK",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/lyrics?attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"lyrics"
																			],
																			"query": [
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the lyrics file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"filename\": \"<string>\",\n    \"url\": \"<string>\",\n    \"mime_type\": \"<string>\",\n    \"title\": \"<string>\",\n    \"file_size\": \"<integer>\",\n    \"meta\": {},\n    \"attached_to\": [\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"uploaded_at\": \"<dateTime>\"\n  }\n}"
																},
																{
																	"name": "User is unauthorized.",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/lyrics?attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"lyrics"
																			],
																			"query": [
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the lyrics file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Unauthorized",
																	"code": 401,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Access Denied",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/lyrics?attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"lyrics"
																			],
																			"query": [
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the lyrics file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Forbidden",
																	"code": 403,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																},
																{
																	"name": "Not Found",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			},
																			{
																				"key": "Authorization",
																				"value": "Bearer <token>",
																				"description": "Added as a part of security scheme: bearer"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id/lyrics?attach=<boolean>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"song-library",
																				"songs",
																				":songId",
																				"versions",
																				":id",
																				"lyrics"
																			],
																			"query": [
																				{
																					"key": "attach",
																					"value": "<boolean>",
																					"description": "Attach the lyrics file to the version."
																				}
																			],
																			"variable": [
																				{
																					"key": "songId"
																				},
																				{
																					"key": "id"
																				}
																			]
																		}
																	},
																	"status": "Not Found",
																	"code": 404,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"message\": \"<string>\"\n}"
																}
															]
														}
													]
												},
												{
													"name": "Display a specific song version.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"song-library",
																"songs",
																":songId",
																"versions",
																":id"
															],
															"variable": [
																{
																	"key": "songId",
																	"value": "<long>",
																	"description": "(Required) ID of the song."
																},
																{
																	"key": "id",
																	"value": "<long>",
																	"description": "(Required) ID of the retrieved resource."
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"data\": {\n    \"duration\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"instruments\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"key\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"meta\": {},\n    \"song_id\": \"<integer>\",\n    \"urls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"version_name\": \"<string>\",\n    \"song_name\": \"<string>\",\n    \"themes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"attachments\": [\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      }\n    ],\n    \"service_plan_segment_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}"
														},
														{
															"name": "User is unauthorized.",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Access Denied",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Remove a specific song version.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"song-library",
																"songs",
																":songId",
																"versions",
																":id"
															],
															"variable": [
																{
																	"key": "songId",
																	"value": "<long>",
																	"description": "(Required) ID of the song."
																},
																{
																	"key": "id",
																	"value": "<long>",
																	"description": "(Required) ID of the retrieved resource."
																}
															]
														}
													},
													"response": [
														{
															"name": "No Content",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "No Content",
															"code": 204,
															"_postman_previewlanguage": "text",
															"header": [],
															"cookie": [],
															"body": ""
														},
														{
															"name": "Cannot delete the only song version, please delete the song instead.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "User is unauthorized.",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Access Denied",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														}
													]
												},
												{
													"name": "Update a specific song version.",
													"request": {
														"auth": {
															"type": "bearer",
															"bearer": [
																{
																	"key": "token",
																	"value": "{{bearerToken}}",
																	"type": "string"
																}
															]
														},
														"method": "PATCH",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"song-library",
																"songs",
																":songId",
																"versions",
																":id"
															],
															"variable": [
																{
																	"key": "songId",
																	"value": "<long>",
																	"description": "(Required) ID of the song."
																},
																{
																	"key": "id",
																	"value": "<long>",
																	"description": "(Required) ID of the retrieved resource."
																}
															]
														}
													},
													"response": [
														{
															"name": "OK",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"data\": {\n    \"duration\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"instruments\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"key\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"meta\": {},\n    \"song_id\": \"<integer>\",\n    \"urls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"version_name\": \"<string>\",\n    \"song_name\": \"<string>\",\n    \"themes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"attachments\": [\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      }\n    ],\n    \"service_plan_segment_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}"
														},
														{
															"name": "Bad request",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Bad Request",
															"code": 400,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "User is unauthorized.",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Unauthorized",
															"code": 401,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Access Denied",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Forbidden",
															"code": 403,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														},
														{
															"name": "Not Found",
															"originalRequest": {
																"method": "PATCH",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	},
																	{
																		"key": "Accept",
																		"value": "application/json"
																	},
																	{
																		"key": "Authorization",
																		"value": "Bearer <token>",
																		"description": "Added as a part of security scheme: bearer"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
																	"options": {
																		"raw": {
																			"headerFamily": "json",
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/song-library/songs/:songId/versions/:id",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"song-library",
																		"songs",
																		":songId",
																		"versions",
																		":id"
																	],
																	"variable": [
																		{
																			"key": "songId"
																		},
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "Not Found",
															"code": 404,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"message\": \"<string>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Store a new song version.",
											"request": {
												"auth": {
													"type": "bearer",
													"bearer": [
														{
															"key": "token",
															"value": "{{bearerToken}}",
															"type": "string"
														}
													]
												},
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/song-library/songs/:songId/versions",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"song-library",
														"songs",
														":songId",
														"versions"
													],
													"variable": [
														{
															"key": "songId",
															"value": "<long>",
															"description": "(Required) ID of the song."
														}
													]
												}
											},
											"response": [
												{
													"name": "Created",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/song-library/songs/:songId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"song-library",
																"songs",
																":songId",
																"versions"
															],
															"variable": [
																{
																	"key": "songId"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"data\": {\n    \"duration\": \"<integer>\",\n    \"id\": \"<integer>\",\n    \"instruments\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"key\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"meta\": {},\n    \"song_id\": \"<integer>\",\n    \"urls\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"version_name\": \"<string>\",\n    \"song_name\": \"<string>\",\n    \"themes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"attachments\": [\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      },\n      {\n        \"id\": \"<integer>\",\n        \"filename\": \"<string>\",\n        \"url\": \"<string>\",\n        \"mime_type\": \"<string>\",\n        \"title\": \"<string>\",\n        \"file_size\": \"<integer>\",\n        \"meta\": {},\n        \"attached_to\": [\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"type\": \"<string>\"\n          }\n        ],\n        \"uploaded_at\": \"<dateTime>\"\n      }\n    ],\n    \"service_plan_segment_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}"
												},
												{
													"name": "Bad request",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/song-library/songs/:songId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"song-library",
																"songs",
																":songId",
																"versions"
															],
															"variable": [
																{
																	"key": "songId"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "User is unauthorized.",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/song-library/songs/:songId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"song-library",
																"songs",
																":songId",
																"versions"
															],
															"variable": [
																{
																	"key": "songId"
																}
															]
														}
													},
													"status": "Unauthorized",
													"code": 401,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												},
												{
													"name": "Access Denied",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															},
															{
																"key": "Authorization",
																"value": "Bearer <token>",
																"description": "Added as a part of security scheme: bearer"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/song-library/songs/:songId/versions",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"song-library",
																"songs",
																":songId",
																"versions"
															],
															"variable": [
																{
																	"key": "songId"
																}
															]
														}
													},
													"status": "Forbidden",
													"code": 403,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"message\": \"<string>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Display all songs.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/song-library/songs?page=<long>&themes=<string>&themes=<string>&keys=<string>&keys=<string>&search=<string>&per_page=<integer>&sort=name",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"song-library",
										"songs"
									],
									"query": [
										{
											"key": "page",
											"value": "<long>",
											"description": "The page to retrieve starting with page 1."
										},
										{
											"key": "themes",
											"value": "<string>",
											"description": "Filter by themes."
										},
										{
											"key": "themes",
											"value": "<string>",
											"description": "Filter by themes."
										},
										{
											"key": "keys",
											"value": "<string>",
											"description": "Filter by keys."
										},
										{
											"key": "keys",
											"value": "<string>",
											"description": "Filter by keys."
										},
										{
											"key": "search",
											"value": "<string>",
											"description": "Search songs by name, author, theme"
										},
										{
											"key": "per_page",
											"value": "<integer>",
											"description": "Number of items per page."
										},
										{
											"key": "sort",
											"value": "name",
											"description": "Sort by column."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/songs?page=<long>&themes=<string>&keys=<string>&search=<string>&per_page=<integer>&sort=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs"
											],
											"query": [
												{
													"key": "page",
													"value": "<long>",
													"description": "The page to retrieve starting with page 1."
												},
												{
													"key": "themes",
													"value": "<string>",
													"description": "Filter by themes."
												},
												{
													"key": "keys",
													"value": "<string>",
													"description": "Filter by keys."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Search songs by name, author, theme"
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Number of items per page."
												},
												{
													"key": "sort",
													"value": "name",
													"description": "Sort by column."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"oid\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"themes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"authors\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"keys\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ccli\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"last_scheduled\": \"<date>\",\n      \"versions\": [\n        {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"oid\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"themes\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"authors\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"keys\": [\n        \"<string>\",\n        \"<string>\"\n      ],\n      \"ccli\": \"<string>\",\n      \"duration\": \"<integer>\",\n      \"last_scheduled\": \"<date>\",\n      \"versions\": [\n        {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        },\n        {\n          \"duration\": \"<integer>\",\n          \"id\": \"<integer>\",\n          \"instruments\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"key\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"meta\": {},\n          \"song_id\": \"<integer>\",\n          \"urls\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"version_name\": \"<string>\",\n          \"song_name\": \"<string>\",\n          \"themes\": [\n            \"<string>\",\n            \"<string>\"\n          ],\n          \"attachments\": [\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            },\n            {\n              \"id\": \"<integer>\",\n              \"filename\": \"<string>\",\n              \"url\": \"<string>\",\n              \"mime_type\": \"<string>\",\n              \"title\": \"<string>\",\n              \"file_size\": \"<integer>\",\n              \"meta\": {},\n              \"attached_to\": [\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                },\n                {\n                  \"id\": \"<integer>\",\n                  \"type\": \"<string>\"\n                }\n              ],\n              \"uploaded_at\": \"<dateTime>\"\n            }\n          ],\n          \"service_plan_segment_ids\": [\n            \"<integer>\",\n            \"<integer>\"\n          ]\n        }\n      ]\n    }\n  ],\n  \"links\": {\n    \"first\": \"<string>\",\n    \"last\": \"<string>\",\n    \"next\": \"<string>\",\n    \"prev\": \"<string>\"\n  },\n  \"meta\": {\n    \"current_page\": \"<integer>\",\n    \"from\": \"<integer>\",\n    \"last_page\": \"<integer>\",\n    \"links\": [\n      {\n        \"url\": \"<string>\",\n        \"label\": \"<string>\",\n        \"active\": \"<boolean>\"\n      },\n      {\n        \"url\": \"<string>\",\n        \"label\": \"<string>\",\n        \"active\": \"<boolean>\"\n      }\n    ],\n    \"path\": \"<string>\",\n    \"per_page\": \"<integer>\",\n    \"to\": \"<integer>\",\n    \"total\": \"<integer>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/songs?page=<long>&themes=<string>&keys=<string>&search=<string>&per_page=<integer>&sort=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs"
											],
											"query": [
												{
													"key": "page",
													"value": "<long>",
													"description": "The page to retrieve starting with page 1."
												},
												{
													"key": "themes",
													"value": "<string>",
													"description": "Filter by themes."
												},
												{
													"key": "keys",
													"value": "<string>",
													"description": "Filter by keys."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Search songs by name, author, theme"
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Number of items per page."
												},
												{
													"key": "sort",
													"value": "name",
													"description": "Sort by column."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/songs?page=<long>&themes=<string>&keys=<string>&search=<string>&per_page=<integer>&sort=name",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs"
											],
											"query": [
												{
													"key": "page",
													"value": "<long>",
													"description": "The page to retrieve starting with page 1."
												},
												{
													"key": "themes",
													"value": "<string>",
													"description": "Filter by themes."
												},
												{
													"key": "keys",
													"value": "<string>",
													"description": "Filter by keys."
												},
												{
													"key": "search",
													"value": "<string>",
													"description": "Search songs by name, author, theme"
												},
												{
													"key": "per_page",
													"value": "<integer>",
													"description": "Number of items per page."
												},
												{
													"key": "sort",
													"value": "name",
													"description": "Sort by column."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Store a newly created song.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"ccli\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/song-library/songs",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"song-library",
										"songs"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"ccli\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/song-library/songs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"oid\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"themes\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"authors\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"keys\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"ccli\": \"<string>\",\n    \"duration\": \"<integer>\",\n    \"last_scheduled\": \"<date>\",\n    \"versions\": [\n      {\n        \"duration\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"instruments\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"key\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"meta\": {},\n        \"song_id\": \"<integer>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"version_name\": \"<string>\",\n        \"song_name\": \"<string>\",\n        \"themes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"service_plan_segment_ids\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      },\n      {\n        \"duration\": \"<integer>\",\n        \"id\": \"<integer>\",\n        \"instruments\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"key\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"meta\": {},\n        \"song_id\": \"<integer>\",\n        \"urls\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"version_name\": \"<string>\",\n        \"song_name\": \"<string>\",\n        \"themes\": [\n          \"<string>\",\n          \"<string>\"\n        ],\n        \"attachments\": [\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          },\n          {\n            \"id\": \"<integer>\",\n            \"filename\": \"<string>\",\n            \"url\": \"<string>\",\n            \"mime_type\": \"<string>\",\n            \"title\": \"<string>\",\n            \"file_size\": \"<integer>\",\n            \"meta\": {},\n            \"attached_to\": [\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              },\n              {\n                \"id\": \"<integer>\",\n                \"type\": \"<string>\"\n              }\n            ],\n            \"uploaded_at\": \"<dateTime>\"\n          }\n        ],\n        \"service_plan_segment_ids\": [\n          \"<integer>\",\n          \"<integer>\"\n        ]\n      }\n    ]\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"ccli\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/song-library/songs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"ccli\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/song-library/songs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"authors\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"duration\": \"<integer>\",\n  \"key\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"name\": \"<string>\",\n  \"version_name\": \"<string>\",\n  \"urls\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"instruments\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"theme_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"meta\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"import_all_files_from_song_select\": \"<boolean>\",\n  \"import_chord_charts_from_song_select\": \"<boolean>\",\n  \"file_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ],\n  \"ccli\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/song-library/songs",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"songs"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "team",
					"item": [
						{
							"name": "Returns a collection of Users that have at least one of the $accessPermissions",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/song-library/team",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"song-library",
										"team"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/team",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"team"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"username\": \"<string>\",\n    \"first_name\": \"<string>\",\n    \"last_name\": \"<string>\",\n    \"email\": \"<string>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/team",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"team"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/team",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"team"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "themes",
					"item": [
						{
							"name": "Display all themes.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/song-library/themes?search=<string>&in-use-only=<boolean>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"song-library",
										"themes"
									],
									"query": [
										{
											"key": "search",
											"value": "<string>",
											"description": "Search themes by name."
										},
										{
											"key": "in-use-only",
											"value": "<boolean>",
											"description": "Only return themes that are in use."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/themes?search=<string>&in-use-only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"themes"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>",
													"description": "Search themes by name."
												},
												{
													"key": "in-use-only",
													"value": "<boolean>",
													"description": "Only return themes that are in use."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    }\n  ]\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/themes?search=<string>&in-use-only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"themes"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>",
													"description": "Search themes by name."
												},
												{
													"key": "in-use-only",
													"value": "<boolean>",
													"description": "Only return themes that are in use."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/song-library/themes?search=<string>&in-use-only=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"song-library",
												"themes"
											],
											"query": [
												{
													"key": "search",
													"value": "<string>",
													"description": "Search themes by name."
												},
												{
													"key": "in-use-only",
													"value": "<boolean>",
													"description": "Only return themes that are in use."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "stripe",
			"item": [
				{
					"name": "invoices",
					"item": [
						{
							"name": "charge_unpaid",
							"item": [
								{
									"name": "Charge unpaid invoices up to 7 months back to the default card on file.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/stripe/invoices/charge_unpaid",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stripe",
												"invoices",
												"charge_unpaid"
											]
										}
									},
									"response": [
										{
											"name": "No Content",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/charge_unpaid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														"charge_unpaid"
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Failed",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/charge_unpaid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														"charge_unpaid"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"error\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/charge_unpaid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														"charge_unpaid"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/charge_unpaid",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														"charge_unpaid"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "texts",
							"item": [
								{
									"name": "Get texts sent in the current invoice period.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/stripe/invoices/texts",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stripe",
												"invoices",
												"texts"
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/texts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														"texts"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": \"<integer>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/texts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														"texts"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/texts",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														"texts"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{invoiceId}",
							"item": [
								{
									"name": "Return a customer's invoice, either with an ID or the upcoming invoice.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/pdf"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/stripe/invoices/:invoiceId?download=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stripe",
												"invoices",
												":invoiceId"
											],
											"query": [
												{
													"key": "download",
													"value": "false",
													"description": "If exists, will return an invoice. Alternatively, you can set the Accept header to application/pdf to get a PDF."
												}
											],
											"variable": [
												{
													"key": "invoiceId",
													"value": "in_fBddr",
													"description": "(Required) The ID of the invoice to retrieve. Use \"upcoming\" to retrieve the upcoming invoice for your organization."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/pdf"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/:invoiceId?download=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														":invoiceId"
													],
													"query": [
														{
															"key": "download",
															"value": "false",
															"description": "If exists, will return an invoice. Alternatively, you can set the Accept header to application/pdf to get a PDF."
														}
													],
													"variable": [
														{
															"key": "invoiceId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"amount_due\": \"<integer>\",\n    \"amount_paid\": \"<integer>\",\n    \"card\": {\n      \"brand\": \"Discover\",\n      \"last4\": \"<integer>\"\n    },\n    \"charge_id\": \"<string>\",\n    \"currency\": \"<string>\",\n    \"currency_digits\": \"<integer>\",\n    \"date\": \"<string>\",\n    \"discounts\": [\n      {\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"discount\": \"<string>\",\n        \"amount\": \"<integer>\",\n        \"amount_string\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"discount\": \"<string>\",\n        \"amount\": \"<integer>\",\n        \"amount_string\": \"<string>\"\n      }\n    ],\n    \"due_date\": \"<string>\",\n    \"id\": \"<string>\",\n    \"line_items\": [\n      {\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"subtext\": \"<string>\",\n        \"amount\": \"<integer>\",\n        \"amount_string\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"subtext\": \"<string>\",\n        \"amount\": \"<integer>\",\n        \"amount_string\": \"<string>\"\n      }\n    ],\n    \"organization\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\"\n    },\n    \"paid\": \"<boolean>\",\n    \"paid_at\": \"<integer>\",\n    \"paid_at_string\": \"<string>\",\n    \"period_end_string\": \"<string>\",\n    \"period_end\": \"<string>\",\n    \"post_payment_credit_notes_amount\": \"<integer>\",\n    \"post_payment_credit_notes_amount_string\": \"<string>\",\n    \"pre_payment_credit_notes_amount\": \"<integer>\",\n    \"pre_payment_credit_notes_amount_string\": \"<string>\",\n    \"refunded\": \"<boolean>\",\n    \"refunds\": [\n      {\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"amount\": \"<integer>\",\n        \"amount_string\": \"<string>\"\n      },\n      {\n        \"id\": \"<string>\",\n        \"description\": \"<string>\",\n        \"amount\": \"<integer>\",\n        \"amount_string\": \"<string>\"\n      }\n    ],\n    \"status\": \"open\",\n    \"total\": \"<integer>\",\n    \"total_string\": \"<string>\"\n  }\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/:invoiceId?download=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														":invoiceId"
													],
													"query": [
														{
															"key": "download",
															"value": "false",
															"description": "If exists, will return an invoice. Alternatively, you can set the Accept header to application/pdf to get a PDF."
														}
													],
													"variable": [
														{
															"key": "invoiceId"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/stripe/invoices/:invoiceId?download=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"stripe",
														"invoices",
														":invoiceId"
													],
													"query": [
														{
															"key": "download",
															"value": "false",
															"description": "If exists, will return an invoice. Alternatively, you can set the Accept header to application/pdf to get a PDF."
														}
													],
													"variable": [
														{
															"key": "invoiceId"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Return a list of invoices.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/stripe/invoices?limit=100&starting_after=<string>&status=void",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"stripe",
										"invoices"
									],
									"query": [
										{
											"key": "limit",
											"value": "100",
											"description": "The number of invoices to return"
										},
										{
											"key": "starting_after",
											"value": "<string>",
											"description": "Get invoices after this date. Can be anything that can be parsed by Carbon"
										},
										{
											"key": "status",
											"value": "void",
											"description": "Get invoices with specific statuses"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/stripe/invoices?limit=100&starting_after=<string>&status=void",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stripe",
												"invoices"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The number of invoices to return"
												},
												{
													"key": "starting_after",
													"value": "<string>",
													"description": "Get invoices after this date. Can be anything that can be parsed by Carbon"
												},
												{
													"key": "status",
													"value": "void",
													"description": "Get invoices with specific statuses"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"amount_due\": \"<integer>\",\n      \"amount_paid\": \"<integer>\",\n      \"card\": {\n        \"brand\": \"Visa\",\n        \"last4\": \"<integer>\"\n      },\n      \"charge_id\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"currency_digits\": \"<integer>\",\n      \"date\": \"<string>\",\n      \"discounts\": [\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discount\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discount\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        }\n      ],\n      \"due_date\": \"<string>\",\n      \"id\": \"<string>\",\n      \"line_items\": [\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"subtext\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"subtext\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"paid\": \"<boolean>\",\n      \"paid_at\": \"<integer>\",\n      \"paid_at_string\": \"<string>\",\n      \"period_end_string\": \"<string>\",\n      \"period_end\": \"<string>\",\n      \"post_payment_credit_notes_amount\": \"<integer>\",\n      \"post_payment_credit_notes_amount_string\": \"<string>\",\n      \"pre_payment_credit_notes_amount\": \"<integer>\",\n      \"pre_payment_credit_notes_amount_string\": \"<string>\",\n      \"refunded\": \"<boolean>\",\n      \"refunds\": [\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        }\n      ],\n      \"status\": \"void\",\n      \"total\": \"<integer>\",\n      \"total_string\": \"<string>\"\n    },\n    {\n      \"amount_due\": \"<integer>\",\n      \"amount_paid\": \"<integer>\",\n      \"card\": {\n        \"brand\": \"MasterCard\",\n        \"last4\": \"<integer>\"\n      },\n      \"charge_id\": \"<string>\",\n      \"currency\": \"<string>\",\n      \"currency_digits\": \"<integer>\",\n      \"date\": \"<string>\",\n      \"discounts\": [\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discount\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"discount\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        }\n      ],\n      \"due_date\": \"<string>\",\n      \"id\": \"<string>\",\n      \"line_items\": [\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"subtext\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"subtext\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        }\n      ],\n      \"organization\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\"\n      },\n      \"paid\": \"<boolean>\",\n      \"paid_at\": \"<integer>\",\n      \"paid_at_string\": \"<string>\",\n      \"period_end_string\": \"<string>\",\n      \"period_end\": \"<string>\",\n      \"post_payment_credit_notes_amount\": \"<integer>\",\n      \"post_payment_credit_notes_amount_string\": \"<string>\",\n      \"pre_payment_credit_notes_amount\": \"<integer>\",\n      \"pre_payment_credit_notes_amount_string\": \"<string>\",\n      \"refunded\": \"<boolean>\",\n      \"refunds\": [\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        },\n        {\n          \"id\": \"<string>\",\n          \"description\": \"<string>\",\n          \"amount\": \"<integer>\",\n          \"amount_string\": \"<string>\"\n        }\n      ],\n      \"status\": \"draft\",\n      \"total\": \"<integer>\",\n      \"total_string\": \"<string>\"\n    }\n  ],\n  \"has_more\": \"<boolean>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/stripe/invoices?limit=100&starting_after=<string>&status=void",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stripe",
												"invoices"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The number of invoices to return"
												},
												{
													"key": "starting_after",
													"value": "<string>",
													"description": "Get invoices after this date. Can be anything that can be parsed by Carbon"
												},
												{
													"key": "status",
													"value": "void",
													"description": "Get invoices with specific statuses"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/stripe/invoices?limit=100&starting_after=<string>&status=void",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"stripe",
												"invoices"
											],
											"query": [
												{
													"key": "limit",
													"value": "100",
													"description": "The number of invoices to return"
												},
												{
													"key": "starting_after",
													"value": "<string>",
													"description": "Get invoices after this date. Can be anything that can be parsed by Carbon"
												},
												{
													"key": "status",
													"value": "void",
													"description": "Get invoices with specific statuses"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "tags",
			"item": [
				{
					"name": "folders",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve one tag folder.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/folders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent_id\": \"<integer>\",\n      \"is_empty\": \"<boolean>\",\n      \"breadcrumbs\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent_id\": \"<integer>\",\n      \"is_empty\": \"<boolean>\",\n      \"breadcrumbs\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete a tag.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/folders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "Accepted",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Accepted",
											"code": 202,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parent_id\": \"<integer>\",\n    \"is_empty\": \"<boolean>\"\n  }\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Update a tag folder.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"parent_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/folders/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parent_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parent_id\": \"<integer>\",\n    \"is_empty\": \"<boolean>\"\n  }\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parent_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parent_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parent_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PATCH",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"parent_id\": \"<integer>\",\n  \"name\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/folders/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"folders",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Retrieve all tag folders.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/folders?filter=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"folders"
									],
									"query": [
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|parent_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/folders?filter=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|parent_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent_id\": \"<integer>\",\n      \"is_empty\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent_id\": \"<integer>\",\n      \"is_empty\": \"<boolean>\"\n    }\n  ]\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/folders?filter=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|parent_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/folders?filter=<string>&sort=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders"
											],
											"query": [
												{
													"key": "filter",
													"value": "<string>",
													"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|parent_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
												},
												{
													"key": "sort",
													"value": "<string>",
													"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Create a new tag folder.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"parent_id\": \"<integer>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/folders",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"folders"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"parent_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"parent_id\": \"<integer>\",\n    \"is_empty\": \"<boolean>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"parent_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"parent_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"name\": \"<string>\",\n  \"parent_id\": \"<integer>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/folders",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"folders"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "people",
					"item": [
						{
							"name": "delete",
							"item": [
								{
									"name": "Remove people from a tag.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"checkedPeople\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/people/delete",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"people",
												"delete"
											]
										}
									},
									"response": [
										{
											"name": "Created",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"checkedPeople\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/people/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														"delete"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
										},
										{
											"name": "Bad request",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"checkedPeople\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/people/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														"delete"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"checkedPeople\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/people/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														"delete"
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  },\n  \"checkedPeople\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/tags/people/delete",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														"delete"
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "Retrieve one person tag.",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{bearerToken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/people/:id?people_ids_only=<integer>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"people",
												":id"
											],
											"query": [
												{
													"key": "people_ids_only",
													"value": "<integer>",
													"description": "Return an array of people IDs instead of full details."
												}
											],
											"variable": [
												{
													"key": "id",
													"value": "<long>",
													"description": "(Required) ID of the retrieved resource."
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/people/:id?people_ids_only=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														":id"
													],
													"query": [
														{
															"key": "people_ids_only",
															"value": "<integer>",
															"description": "Return an array of people IDs instead of full details."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"person_details\": {\n      \"name\": {\n        \"first\": \"<string>\",\n        \"last\": \"<string>\",\n        \"middle\": \"<string>\",\n        \"nick\": \"<string>\",\n        \"maiden\": \"<string>\",\n        \"id\": \"<integer>\"\n      },\n      \"profile_picture\": \"<string>\",\n      \"archived\": \"<boolean>\",\n      \"address\": {\n        \"street_address\": \"<string>\",\n        \"city\": \"<string>\",\n        \"state\": \"<string>\",\n        \"zip\": \"<string>\",\n        \"longitude\": \"<string>\",\n        \"latitude\": \"<string>\",\n        \"is_private\": \"<integer>\"\n      },\n      \"birthdate\": \"<string>\",\n      \"phone\": {\n        \"home\": {\n          \"number\": \"<string>\",\n          \"private\": \"<integer>\",\n          \"doNotText\": \"<integer>\"\n        },\n        \"work\": {\n          \"number\": \"<string>\",\n          \"private\": \"<integer>\",\n          \"doNotText\": \"<integer>\"\n        },\n        \"mobile\": {\n          \"number\": \"<string>\",\n          \"private\": \"<integer>\",\n          \"doNotText\": \"<integer>\"\n        }\n      },\n      \"email\": {\n        \"address\": \"<string>\",\n        \"private\": \"<integer>\",\n        \"doNotEmail\": \"<integer>\"\n      }\n    }\n  }\n}"
										},
										{
											"name": "User is unauthorized.",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/people/:id?people_ids_only=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														":id"
													],
													"query": [
														{
															"key": "people_ids_only",
															"value": "<integer>",
															"description": "Return an array of people IDs instead of full details."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Access Denied",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/people/:id?people_ids_only=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														":id"
													],
													"query": [
														{
															"key": "people_ids_only",
															"value": "<integer>",
															"description": "Return an array of people IDs instead of full details."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "Bearer <token>",
														"description": "Added as a part of security scheme: bearer"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/tags/people/:id?people_ids_only=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"tags",
														"people",
														":id"
													],
													"query": [
														{
															"key": "people_ids_only",
															"value": "<integer>",
															"description": "Return an array of people IDs instead of full details."
														}
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"message\": \"<string>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Add people to a tag.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"people_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/people",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										"people"
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"people_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/people",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"people"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"people_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/people",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"people"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"people_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/people",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"people"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"data\": {\n    \"tags\": [\n      \"<integer>\",\n      \"<integer>\"\n    ],\n    \"people_ids\": [\n      \"<integer>\",\n      \"<integer>\"\n    ]\n  }\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/people",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												"people"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "{id}",
					"item": [
						{
							"name": "Retrieve one tag.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tag_category\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"parent_category_id\": \"<integer>\"\n      },\n      \"parent_folder\": \"<integer>\",\n      \"is_locked\": \"<boolean>\",\n      \"created_on\": \"<date>\",\n      \"folder_name\": \"<string>\",\n      \"people_in_tag\": \"<integer>\",\n      \"is_auto\": \"<boolean>\",\n      \"filter\": \"<boolean>\",\n      \"is_legacy_filter\": \"<boolean>\",\n      \"breadcrumbs\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        }\n      ]\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tag_category\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"parent_category_id\": \"<integer>\"\n      },\n      \"parent_folder\": \"<integer>\",\n      \"is_locked\": \"<boolean>\",\n      \"created_on\": \"<date>\",\n      \"folder_name\": \"<string>\",\n      \"people_in_tag\": \"<integer>\",\n      \"is_auto\": \"<boolean>\",\n      \"filter\": \"<boolean>\",\n      \"is_legacy_filter\": \"<boolean>\",\n      \"breadcrumbs\": [\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        },\n        {\n          \"id\": \"<integer>\",\n          \"name\": \"<string>\",\n          \"parent_id\": \"<integer>\"\n        }\n      ]\n    }\n  ]\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Delete a tag.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "Accepted",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Accepted",
									"code": 202,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tag_category\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent_category_id\": \"<integer>\"\n    },\n    \"parent_folder\": \"<integer>\",\n    \"is_locked\": \"<boolean>\",\n    \"created_on\": \"<date>\",\n    \"folder_name\": \"<string>\",\n    \"people_in_tag\": \"<integer>\",\n    \"is_auto\": \"<boolean>\",\n    \"filter\": \"<boolean>\",\n    \"is_legacy_filter\": \"<boolean>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update a tag.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"tag_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"description\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags/:id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "<long>",
											"description": "(Required) ID of the retrieved resource."
										}
									]
								}
							},
							"response": [
								{
									"name": "Created",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tag_category\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent_category_id\": \"<integer>\"\n    },\n    \"parent_folder\": \"<integer>\",\n    \"is_locked\": \"<boolean>\",\n    \"created_on\": \"<date>\",\n    \"folder_name\": \"<string>\",\n    \"people_in_tag\": \"<integer>\",\n    \"is_auto\": \"<boolean>\",\n    \"filter\": \"<boolean>\",\n    \"is_legacy_filter\": \"<boolean>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tag_category_id\": \"<integer>\",\n  \"name\": \"<string>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"description\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tags/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tags",
												":id"
											],
											"variable": [
												{
													"key": "id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "Retrieve all tags.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/tags?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							],
							"query": [
								{
									"key": "page",
									"value": "<long>",
									"description": "The page to retrieve starting with page 1."
								},
								{
									"key": "pageSize",
									"value": "<long>",
									"description": "The number of resources to return. Default: 25"
								},
								{
									"key": "filter",
									"value": "<string>",
									"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|tag_category_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
								},
								{
									"key": "sort",
									"value": "<string>",
									"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
								}
							]
						}
					},
					"response": [
						{
							"name": "OK",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "page",
											"value": "<long>",
											"description": "The page to retrieve starting with page 1."
										},
										{
											"key": "pageSize",
											"value": "<long>",
											"description": "The number of resources to return. Default: 25"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|tag_category_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": [\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tag_category\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"parent_category_id\": \"<integer>\"\n      },\n      \"parent_folder\": \"<integer>\",\n      \"is_locked\": \"<boolean>\",\n      \"created_on\": \"<date>\",\n      \"folder_name\": \"<string>\",\n      \"people_in_tag\": \"<integer>\",\n      \"is_auto\": \"<boolean>\",\n      \"filter\": \"<boolean>\",\n      \"is_legacy_filter\": \"<boolean>\"\n    },\n    {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"tag_category\": {\n        \"id\": \"<integer>\",\n        \"name\": \"<string>\",\n        \"description\": \"<string>\",\n        \"parent_category_id\": \"<integer>\"\n      },\n      \"parent_folder\": \"<integer>\",\n      \"is_locked\": \"<boolean>\",\n      \"created_on\": \"<date>\",\n      \"folder_name\": \"<string>\",\n      \"people_in_tag\": \"<integer>\",\n      \"is_auto\": \"<boolean>\",\n      \"filter\": \"<boolean>\",\n      \"is_legacy_filter\": \"<boolean>\"\n    }\n  ],\n  \"pagination\": {\n    \"total\": \"<integer>\",\n    \"count\": \"<integer>\",\n    \"per_page\": \"<integer>\",\n    \"current_page\": \"<integer>\",\n    \"last_page\": \"<integer>\"\n  }\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "page",
											"value": "<long>",
											"description": "The page to retrieve starting with page 1."
										},
										{
											"key": "pageSize",
											"value": "<long>",
											"description": "The number of resources to return. Default: 25"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|tag_category_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tags?page=<long>&pageSize=<long>&filter=<string>&sort=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									],
									"query": [
										{
											"key": "page",
											"value": "<long>",
											"description": "The page to retrieve starting with page 1."
										},
										{
											"key": "pageSize",
											"value": "<long>",
											"description": "The number of resources to return. Default: 25"
										},
										{
											"key": "filter",
											"value": "<string>",
											"description": "\nFiltered fields:\n| Field | Field Type | Description |\n|--|--|--|\n|tag_category_id|number||\n|name|text||\n\nSee **Filters** above for more details about using filters."
										},
										{
											"key": "sort",
											"value": "<string>",
											"description": "Sortable fields\n* name\n* created_on\n\n\nSee **Sorting** above for more details about sorting."
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				},
				{
					"name": "Create a new tag.",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{bearerToken}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"<string>\",\n  \"tag_category_id\": \"<integer>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"people_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/tags",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"tags"
							]
						}
					},
					"response": [
						{
							"name": "Created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"tag_category_id\": \"<integer>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"people_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"data\": {\n    \"id\": \"<integer>\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"tag_category\": {\n      \"id\": \"<integer>\",\n      \"name\": \"<string>\",\n      \"description\": \"<string>\",\n      \"parent_category_id\": \"<integer>\"\n    },\n    \"parent_folder\": \"<integer>\",\n    \"is_locked\": \"<boolean>\",\n    \"created_on\": \"<date>\",\n    \"folder_name\": \"<string>\",\n    \"people_in_tag\": \"<integer>\",\n    \"is_auto\": \"<boolean>\",\n    \"filter\": \"<boolean>\",\n    \"is_legacy_filter\": \"<boolean>\"\n  }\n}"
						},
						{
							"name": "Bad request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"tag_category_id\": \"<integer>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"people_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "User is unauthorized.",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"tag_category_id\": \"<integer>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"people_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						},
						{
							"name": "Access Denied",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "Bearer <token>",
										"description": "Added as a part of security scheme: bearer"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"<string>\",\n  \"tag_category_id\": \"<integer>\",\n  \"auto\": \"<boolean>\",\n  \"filter\": \"<string>\",\n  \"people_ids\": [\n    \"<integer>\",\n    \"<integer>\"\n  ]\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tags",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tags"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"message\": \"<string>\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "texts",
			"item": [
				{
					"name": "limit",
					"item": [
						{
							"name": "get Texting Limit",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/texts/limit",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"texts",
										"limit"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/limit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"limit"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": \"<number>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/limit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"limit"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/limit",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"limit"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "price",
					"item": [
						{
							"name": "get Text Pricing",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/texts/price",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"texts",
										"price"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/price",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"price"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": \"<number>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/price",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"price"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/price",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"price"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "sent",
					"item": [
						{
							"name": "get Monthly Texts Sent",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/texts/sent",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"texts",
										"sent"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/sent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"sent"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": \"<number>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/sent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"sent"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/texts/sent",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"texts",
												"sent"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "tithely",
			"item": [
				{
					"name": "billing",
					"item": [
						{
							"name": "Get subscription info from Tithe.ly",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/billing",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"billing"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/billing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"billing"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"billedFrom\": \"<dateTime>\",\n    \"currencyCode\": \"<string>\",\n    \"currentBillingPeriod\": {\n      \"from\": \"<dateTime>\",\n      \"to\": \"<dateTime>\"\n    },\n    \"organizationId\": \"<string>\",\n    \"outstanding\": \"<number>\",\n    \"paymentMethod\": {\n      \"brand\": \"<string>\",\n      \"digits\": \"<string>\",\n      \"expiry\": \"<string>\",\n      \"id\": \"<string>\"\n    },\n    \"paymentMethodId\": \"<string>\",\n    \"plan\": \"<string>\",\n    \"status\": \"<string>\",\n    \"stripeCustomerId\": \"<string>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/billing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"billing"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/billing",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"billing"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "create",
					"item": [
						{
							"name": "Create a new Tithe.ly Organization linked to the current organization.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/create",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"create"
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"create"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"create"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"create"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"create"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Already linked",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/create",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"create"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "find",
					"item": [
						{
							"name": "Fetches list of tithe.ly organizations that may match the current organization.",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/find",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"find"
									]
								},
								"description": "Location is not included, as that will be taken care of by the link() method."
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/find",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"find"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": [\n    {\n      \"organizationId\": \"<string>\",\n      \"organizationName\": \"<string>\",\n      \"score\": \"<integer>\"\n    },\n    {\n      \"organizationId\": \"<string>\",\n      \"organizationName\": \"<string>\",\n      \"score\": \"<integer>\"\n    }\n  ]\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/find",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"find"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/find",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"find"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "link",
					"item": [
						{
							"name": "Check if linked",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/link",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"link"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"linked\": \"<boolean>\"\n  }\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Start the linking process",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"target\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/tithely/link",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"link"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"target\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"link\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"target\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"target\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"target\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Already linked",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"target\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						},
						{
							"name": "Update link",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/link",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"link"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"linked\": \"<boolean>\",\n    \"message\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Already linked",
									"originalRequest": {
										"method": "PATCH",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/link",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"link"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "migrate",
					"item": [
						{
							"name": "Migrate billing to Tithe.ly",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/migrate",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"migrate"
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/migrate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"migrate"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/migrate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"migrate"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/migrate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"migrate"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/migrate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"migrate"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Already linked",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/migrate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"migrate"
											]
										}
									},
									"status": "Conflict",
									"code": 409,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "sso",
					"item": [
						{
							"name": "tithely Sso",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/sso?redirect=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"sso"
									],
									"query": [
										{
											"key": "redirect",
											"value": "<string>",
											"description": "Relative URL to redirect to after login"
										}
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sso?redirect=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sso"
											],
											"query": [
												{
													"key": "redirect",
													"value": "<string>",
													"description": "Relative URL to redirect to after login"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"data\": {\n    \"link\": \"<string>\"\n  }\n}"
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sso?redirect=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sso"
											],
											"query": [
												{
													"key": "redirect",
													"value": "<string>",
													"description": "Relative URL to redirect to after login"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sso?redirect=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sso"
											],
											"query": [
												{
													"key": "redirect",
													"value": "<string>",
													"description": "Relative URL to redirect to after login"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sso?redirect=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sso"
											],
											"query": [
												{
													"key": "redirect",
													"value": "<string>",
													"description": "Relative URL to redirect to after login"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "sync",
					"item": [
						{
							"name": "Synchronize billing with Tithe.ly",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{bearerToken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/tithely/sync",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"tithely",
										"sync"
									]
								}
							},
							"response": [
								{
									"name": "No Content",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sync"
											]
										}
									},
									"status": "No Content",
									"code": 204,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad request",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sync"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "User is unauthorized.",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sync"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								},
								{
									"name": "Access Denied",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "Bearer <token>",
												"description": "Added as a part of security scheme: bearer"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/tithely/sync",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"tithely",
												"sync"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"message\": \"<string>\"\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "dee58d60e4be11d9f3d301e2ebb7bf96",
				"type": "string"
			},
			{
				"key": "key",
				"value": "Api-Key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.breezechms.com/api/v2"
		},
		{
			"key": "baseUrlTest",
			"value": "https://api.breezechms.test/api/v2",
			"type": "string"
		},
		{
			"key": "bearerToken",
			"value": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJodHRwOi8vYXBpLmJyZWV6ZWNobXMuY29tL2FwaS92Mi9hdXRoL3JlZnJlc2giLCJpYXQiOjE3MDM2NzUxODMsImV4cCI6MTcwNDgxNjg2OCwibmJmIjoxNzA0ODEzMjY4LCJqdGkiOiJjN1dTa05HRUNRRkpIN1NvIiwic3ViIjoiMzIxNzIwIiwicHJ2IjoiNGFjMDVjMGY4YWMwOGYzNjRjYjRkMDNmYjhlMWY2MzFmZWMzMjJlOCJ9.FM14YGWOeeurvV-"
		}
	]
}